{"version":3,"sources":["portal.js"],"names":["Backbone","require","composer","broker","config","user","Router","MainView","$","window","View","prototype","attachToTemplate","document","ready","ajaxPrefilter","options","originalOptions","jqXHR","url","apiRoot","ajaxComplete","e","xhr","settings","status","location","href","creds","sessionStorage","getItem","JSON","parse","ajaxSetup","headers","Authorization","btoa","email","password","fetch","el","start","history"],"mappings":"AAAA,GAAIA,UAAWC,QAAQ,YACnBC,SAAWD,QAAQ,qBACnBE,OAASF,QAAQ,mBAEjBG,OAASH,QAAQ,oBACjBI,KAAOJ,QAAQ,iBACfK,OAASL,QAAQ,YACjBM,SAAWN,QAAQ,eAEvBD,UAASQ,EAAIC,OAAOD,EACpBR,SAASU,KAAKC,UAAUC,kBAAmB,EAE3CJ,EAAEK,UAAUC,MAAM,WAGhBN,EAAEO,cAAc,SAAUC,EAASC,EAAiBC,GAClDF,EAAQG,IAAMf,OAAOgB,QAAUJ,EAAQG,MAIzCX,EAAEK,UAAUQ,aAAa,SAASC,EAAGC,EAAKC,GACtB,KAAdD,EAAIE,SACNC,SAASC,KAAO,WAKpB,IAAIC,GAAQC,eAAeC,QAAQ,aAC/BF,KACFA,EAAQG,KAAKC,MAAMJ,GACnBpB,EAAEyB,WACAC,SAAWC,cAAiB,SAAWC,KAAKR,EAAMS,MAAQ,IAAMT,EAAMU,cAI1EjC,KAAKkC,OAEU,IAAIhC,WAAUiC,GAAI,SACpB,GAAIlC,OAEjBH,QAAOsC,QACPzC,SAAS0C,QAAQD","file":"portal.js","sourcesContent":["var Backbone = require('backbone');\nvar composer = require('backbone.composer');\nvar broker = require('backbone.broker');\n\nvar config = require('./config/default');\nvar user = require('./models/user');\nvar Router = require('./router');\nvar MainView = require('./views/main');\n\nBackbone.$ = window.$;\nBackbone.View.prototype.attachToTemplate = true;\n\n$(document).ready(function () {\n\n  // send all ajax request to the correct backbend api server\n  $.ajaxPrefilter(function( options, originalOptions, jqXHR ) {\n    options.url = config.apiRoot + options.url;\n  });\n\n  // if we get a 401 from any request immediatly log off\n  $(document).ajaxComplete(function(e, xhr, settings) {\n    if (xhr.status == 401) {\n      location.href = '/login';\n    }\n  });\n\n  // add basic auth creds to all ajax requests\n  var creds = sessionStorage.getItem('eratecycle');\n  if (creds) {\n    creds = JSON.parse(creds);\n    $.ajaxSetup({\n      headers: { 'Authorization': 'Basic ' + btoa(creds.email + ':' + creds.password) }\n    });\n  }\n\n  user.fetch();\n\n  var mainView = new MainView({el: 'body'});\n  var router = new Router();\n\n  broker.start();\n  Backbone.history.start();\n});\n"],"sourceRoot":"/source/"}