{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","_includes/portal/js/app.js","app.js","_includes/portal/js/models/user.js","_includes/portal/js/templates/nav-header.jst","_includes/portal/js/templates/nav.jst","_includes/portal/js/views/main.js","_includes/portal/js/views/nav.js","node_modules/backbone.composer/backbone.composer.js","node_modules/backbone.composer/node_modules/underscore/underscore.js","node_modules/backbone/backbone.js","node_modules/backbone/node_modules/underscore/underscore.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"Backbone","$","window","MainView","document","ready","View","prototype","attachToTemplate","el","./views/main","backbone","backbone.composer",2,"module","Model","extend","defaults","name",3,"obj","__t","__p","Array","join","underscore",4,5,"NavView","UserModel","initialize","console","log","this","addSubView","view","model","selector","location","../models/user","./nav",6,"header","template","pageId","attr","addClass","listenTo","render","onRender","hasClass","slimScroll","height","railOpacity","prepend","toJSON","../templates/nav-header.jst","../templates/nav.jst",7,"factory","define","amd","_","isFunction","data","serializeData","$template","$el","replaceWith","setElement","html","restoreSubViews","apply","arguments","trigger","setView","options","removeSubViews","emptyDOM","empty","getView","_subViews","push","_removeSubView","_showSubView","each","isObject","isString","before","after","append","onShow","getSubViewCount","subView","stopListening","close","viewOption","findWhere","index","indexOf","splice","removeSubViewForModel","find","getAttr","attribute","get","serializeForm","result","fields","serializeArray","field","value","onClose","remove","unbind",8,"root","previousUnderscore","ArrayProto","ObjProto","Object","FuncProto","Function","slice","concat","toString","hasOwnProperty","nativeIsArray","isArray","nativeKeys","keys","nativeBind","bind","_wrapped","VERSION","createCallback","func","context","argCount","other","collection","accumulator","iteratee","identity","matches","property","forEach","map","collect","currentKey","results","reduceError","reduce","foldl","inject","memo","TypeError","reduceRight","foldr","detect","predicate","some","list","filter","select","reject","negate","every","all","any","contains","include","target","values","invoke","method","args","isFunc","pluck","key","where","attrs","max","computed","Infinity","lastComputed","min","shuffle","rand","set","shuffled","random","sample","guard","Math","sortBy","criteria","sort","left","right","b","group","behavior","groupBy","has","indexBy","countBy","sortedIndex","array","low","high","mid","toArray","size","partition","pass","fail","first","head","take","initial","last","rest","tail","drop","compact","flatten","input","shallow","strict","output","isArguments","without","difference","uniq","unique","isSorted","isBoolean","seen","union","intersection","argsLength","item","j","zip","object","lastIndexOf","from","idx","range","start","stop","step","ceil","Ctor","bound","self","partial","boundArgs","position","bindAll","memoize","hasher","cache","address","delay","wait","setTimeout","defer","throttle","timeout","previous","later","leading","now","remaining","clearTimeout","trailing","debounce","immediate","timestamp","callNow","wrap","wrapper","compose","times","once","pairs","invert","functions","methods","names","source","prop","pick","omit","String","clone","tap","interceptor","eq","aStack","bStack","className","aCtor","constructor","bCtor","pop","isEqual","isEmpty","isElement","nodeType","type","isFinite","isNaN","parseFloat","isNumber","isNull","isUndefined","noConflict","constant","noop","pair","accum","floor","Date","getTime","escapeMap","&","<",">","\"","'","`","unescapeMap","createEscaper","escaper","match","testRegexp","RegExp","replaceRegexp","string","test","replace","escape","unescape","idCounter","uniqueId","prefix","id","templateSettings","evaluate","interpolate","noMatch","escapes","\\","\r","\n"," "," ","escapeChar","text","settings","oldSettings","matcher","offset","variable","argument","chain","instance","_chain","mixin",9,"jQuery","Zepto","ender","previousBackbone","emulateHTTP","emulateJSON","Events","on","callback","eventsApi","_events","events","ctx","off","_callback","retain","ev","k","allEvents","triggerEvents","listeningTo","_listeningTo","_listenId","eventSplitter","action","split","a1","a2","a3","listenMethods","listenToOnce","implementation","attributes","cid","parse","changed","validationError","idAttribute","sync","val","unset","changes","silent","changing","prev","current","_validate","_changing","_previousAttributes","_pending","clear","hasChanged","changedAttributes","diff","old","previousAttributes","fetch","success","resp","wrapError","save","xhr","validate","serverAttrs","isNew","patch","destroy","url","base","urlError","encodeURIComponent","isValid","error","modelMethods","unshift","Collection","models","comparator","_reset","reset","setOptions","add","merge","addOptions","singular","_byId","_removeReference","existing","at","targetModel","sortable","sortAttr","toAdd","toRemove","modelMap","order","_prepareModel","_addReference","orderedModels","previousModels","shift","create","_onModelEvent","event","attributeMethods","iterator","viewOptions","_ensureElement","delegateEvents","delegateEventSplitter","tagName","element","delegate","undelegateEvents","eventName","methodMap","params","dataType","contentType","JSON","stringify","_method","beforeSend","setRequestHeader","processData","noXhrPatch","ActiveXObject","ajax","XMLHttpRequest","dispatchEvent","update","delete","read","Router","routes","_bindRoutes","optionalParam","namedParam","splatParam","escapeRegExp","route","isRegExp","_routeToRegExp","router","history","fragment","_extractParameters","execute","navigate","optional","exec","param","decodeURIComponent","History","handlers","routeStripper","rootStripper","isExplorer","trailingSlash","pathStripper","started","interval","atRoot","pathname","getHash","href","getFragment","forcePushState","_hasPushState","_wantsHashChange","decodeURI","search","hashChange","_wantsPushState","pushState","docMode","documentMode","oldIE","navigator","userAgent","toLowerCase","frame","iframe","hide","appendTo","contentWindow","checkUrl","_checkUrlInterval","setInterval","loc","hash","replaceState","title","loadUrl","clearInterval","handler","assign","_updateHash","open","protoProps","staticProps","child","parent","Surrogate","__super__",10,"createReduce","dir","optimizeCb","isArrayLike","createIndexFinder","cb","collectNonEnumProps","nonEnumIdx","nonEnumerableProps","proto","nativeCreate","createAssigner","keysFunc","undefinedOnly","baseCreate","MAX_ARRAY_INDEX","pow","findIndex","findKey","includes","fromIndex","startIndex","len","unzip","findLastIndex","executeBound","sourceFunc","boundFunc","callingContext","hasEnumBug","propertyIsEnumerable","allKeys","mapObject","extendOwn","oiteratee","isMatch","areArrays","Int8Array","propertyOf","fallback","valueOf",11,"dup"],"mappings":"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","file":"app.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","var Backbone = require('backbone');\nBackbone.$ = window.$;\nvar composer = require('backbone.composer');\n\nvar MainView = require('./views/main');\n\n$(document).ready(function () {\n  Backbone.View.prototype.attachToTemplate = true;\n  var mainView = new MainView({el: 'body'});\n});\n","var Backbone = require('backbone');\nBackbone.$ = window.$;\nvar composer = require('backbone.composer');\n\nvar MainView = require('./views/main');\n\n$(document).ready(function () {\n  Backbone.View.prototype.attachToTemplate = true;\n  var mainView = new MainView({el: 'body'});\n});\n","var Backbone = require('backbone');\n\nmodule.exports = Backbone.Model.extend({\n  defaults: {\n    name: 'David Williams',\n    \n  }\n});\n","var _ = require(\"underscore\");\nmodule.exports = function(obj){\nvar __t,__p='',__j=Array.prototype.join,print=function(){__p+=__j.call(arguments,'');};\nwith(obj||{}){\n__p+='<li class=\"nav-header\">\\n    <div class=\"dropdown profile-element\"> <span>\\n            <img alt=\"image\" class=\"img-circle\" src=\"/img/portal/profile_small.jpg\" />\\n             </span>\\n        <a data-toggle=\"dropdown\" class=\"dropdown-toggle\" href=\"#\">\\n            <span class=\"clear\"> <span class=\"block m-t-xs\"> <strong class=\"font-bold\">'+\n((__t=( name ))==null?'':__t)+\n'</strong>\\n            <b class=\"caret\"></b></span> </span> </a>\\n        <ul class=\"dropdown-menu animated fadeInRight m-t-xs\">\\n            <li><a href=\"profile.html\">Profile</a></li>\\n            <li><a href=\"contacts.html\">Contacts</a></li>\\n            <li><a href=\"mailbox.html\">Mailbox</a></li>\\n            <li class=\"divider\"></li>\\n            <li><a href=\"login.html\">Logout</a></li>\\n        </ul>\\n    </div>\\n</li>\\n';\n}\nreturn __p;\n};\n","var _ = require(\"underscore\");\nmodule.exports = function(obj){\nvar __t,__p='',__j=Array.prototype.join,print=function(){__p+=__j.call(arguments,'');};\nwith(obj||{}){\n__p+='<nav class=\"navbar-default navbar-static-side\" role=\"navigation\">\\n    <div class=\"sidebar-collapse\">\\n        <ul class=\"nav\" id=\"side-menu\">\\n            <li id=\"nav-dashboard\">\\n                <a href=\"/portal/dashboard\"><i class=\"fa fa-bar-chart-o\"></i> <span class=\"nav-label\">Dashboard</span></a>\\n            </li>\\n            <li id=\"nav-file-manager\">\\n                <a href=\"/portal/file-manager\"><i class=\"fa fa-files-o\"></i> <span class=\"nav-label\">Documents</span></a>\\n            </li>\\n        </ul>\\n\\n    </div>\\n</nav>\\n';\n}\nreturn __p;\n};\n","var Backbone = require('backbone');\n\nvar NavView = require('./nav');\nvar UserModel = require('../models/user');\n\nmodule.exports = Backbone.View.extend({\n  initialize: function(){\n    console.log('it worked');\n\n    this.addSubView({\n      view: new NavView({model: new UserModel()}),\n      selector: '#wrapper',\n      location: 'prepend'\n    });\n  }\n});\n","var Backbone = require('backbone');\nvar header = require('../templates/nav-header.jst');\n\nmodule.exports = Backbone.View.extend({\n  template: require('../templates/nav.jst'),\n  attachToTemplate: true,\n\n  initialize: function(){\n    var pageId = $('[data-page]').attr('data-page');\n    if (pageId) {\n      $('#nav-'+pageId).addClass('active');\n    }\n\n    this.listenTo(this.model, 'change', this.render);\n  },\n\n  onRender: function() {\n    if($(\"body\").hasClass('fixed-sidebar')) {\n        this.$('.sidebar-collapse').slimScroll({\n            height: '100%',\n            railOpacity: 0.9,\n        });\n    }\n    this.$('#side-menu').prepend(header(this.model.toJSON()));\n  }\n\n});\n","/*!\n * backbone.composer.js v0.2.1\n * Copyright 2014, Nick Nance (@nancenick)\n * backbone.composer.js may be freely distributed under the MIT license.\n */\n (function (factory) {\n\n  // Check for AMD.\n  if (typeof define === 'function' && define.amd) {\n    define(['underscore', 'backbone'], factory);\n  }\n\n  // Next for Node.js or CommonJS.\n  else if (typeof exports === 'object') {\n    factory(require('underscore'), require('backbone'));\n  }\n\n  // Finally, as a browser global.\n  else {\n    factory(_, Backbone);\n  }\n\n}(function (_, Backbone) {\n\n\n  // Backbone.View Mixins\n  // --------------------\n\n  _.extend(Backbone.View.prototype, {\n\n    /**\n    * ViewManager has a default render function that will render\n    * if there is a template function defined in the view.  If serializeData is\n    * implemented its' return value will be passed to the template funcion otherwise\n    * this will be passed.\n    *\n    * Implement an 'onRender'\n    * function to extend the render functionality.  It returns 'this' to support\n    * chaining. This will trigger a 'rendered' event.\n    *\n    * By setting attachToTemplate render will attach the view to the top element of\n    * the template. Using this option will remove the default behavior of Backbone\n    * that creates all views with a default div tag.\n    * @render\n    */\n    render: function() {\n        if (this.template && _.isFunction(this.template)) {\n            var data = _.isFunction(this.serializeData) ? this.serializeData() : this;\n            var $template = $(this.template(data));\n            if (this.attachToTemplate && $template.length === 1) {\n                // swap out the view on the top level element to avoid duplication\n                this.$el.replaceWith($template);\n\n                // delegate events\n                this.setElement($template);\n            } else {\n                this.$el.html($template);\n            }\n        }\n\n        this.restoreSubViews();\n\n        if (this.onRender && _.isFunction(this.onRender)) {\n            this.onRender.apply(this, arguments);\n        }\n        this.trigger('rendered',this);\n        return this;\n    },\n\n    /**\n    * Use setView to replace the entire contents of the view with a new view.\n    * this function will also remove all views currently contained within the view.\n    * This will trigger a 'shown' event.\n    * @setView\n    * @param {Backbone.View} view - The view to use\n    * @param {object} options - Set options.emptyDOM to true in cases where the DOM\n    * that the view is attached is managed by something other than Backbone\n    */\n    setView: function(view, options) {\n        this.removeSubViews();\n        // this is needed for cases where the DOM is changed by something\n        // other than what is managed by backbone\n        if (options && options.emptyDOM) {\n            this.$el.empty();\n        }\n        this.addSubView({view: view, selector: this.$el});\n        return view;\n    },\n\n    /**\n    * Use getView to retrieve the primary subView\n    * @getView\n    */\n    getView: function() {\n        if (this._subViews && this._subViews.length > 0) {\n            return this._subViews[0];\n        }\n    },\n\n    /**\n    * AddSubView is used to render and add a subview to an parent view. If you need\n    * to perform some work after the view is added to the DOM you can implement a\n    * 'onShow' function.  This will also trigger a 'shown' event.\n    * @addSubView\n    * @param {object} options - An option object with a view and a selector\n    */\n    addSubView: function(options) {\n        if (!options || !options.view) {\n            throw new Error('Missing required view option');\n        }\n\n        if (!this._subViews) {\n            this._subViews = [options];\n        }\n        else {\n            this._subViews.push(options);\n        }\n        this.listenTo(options.view,'closed',this._removeSubView);\n\n        return this._showSubView(options);\n    },\n\n    /**\n    * RestoreSubViews can be used to restore views to the DOM that have been\n    * removed as a result of the parent view rerendering\n    * @restoreSubViews\n    */\n    restoreSubViews: function() {\n      // restore the sub views to the dom\n      _.each(this._subViews,this._showSubView,this);\n    },\n\n    _showSubView: function(options) {\n      var selector;\n      if (_.isObject(options.selector)) {\n          selector = options.selector;\n      }\n      else if (_.isString(options.selector)) {\n          selector = this.$(options.selector);\n      }\n      else {\n          selector = this.$el;\n      }\n\n      options.view.render();\n      if (options.location === 'prepend') {\n          selector.prepend(options.view.el);\n      }\n      else if (options.location === 'before') {\n          selector.before(options.view.el);\n      }\n      else if (options.location === 'after') {\n          selector.after(options.view.el);\n      }\n      else {\n          selector.append(options.view.el);\n      }\n\n      if (options.view.onShow && _.isFunction(options.view.onShow)) {\n          options.view.onShow.apply(options.view,arguments);\n      }\n      options.view.trigger('shown',this);\n\n      return options.view;\n    },\n\n    /**\n    * Retrieve the current number of sub views.\n    * @getSubViewCount\n    */\n    getSubViewCount: function() {\n      return this._subViews ? this._subViews.length : 0;\n    },\n\n    /**\n    * Removes all sub-views from a parent\n    * @removeSubViews\n    */\n    removeSubViews: function() {\n      _.each(this._subViews, function(subView) {\n        this.stopListening(subView.view);\n        subView.view.close();\n      }, this);\n      this._subViews = [];\n    },\n\n    _removeSubView: function(view) {\n      var viewOption = _.findWhere(this._subViews, {view: view});\n      var index = this._subViews.indexOf(viewOption);\n      if (index > -1) {\n        this._subViews.splice(index,1);\n      }\n    },\n\n    /**\n    * RemoveSubViewForModel will close the first sub view that has the attched\n    * model.  As a result a 'closed' event will be fired for the view and it\n    * will be removed from the DOM.\n    * @removeSubViewForModel\n    * @param {object} model - The model associated with the view\n    */\n    removeSubViewForModel: function(model) {\n        _.find(this._subViews, function(subView, index) {\n          if (subView.view.model && subView.view.model === model) {\n              subView.view.close();\n              return true;\n          }\n        }, this);\n    },\n\n    /**\n    * Helper function to return the attribute of a model if the model is assigned\n    * @getAttr\n    * @params {string} attribute - The name of the attribute\n    */\n    getAttr: function(attribute) {\n        if (this.model) {\n            return this.model.get(attribute);\n        }\n    },\n\n    /**\n    * Return all the fields and their value of a form as an object\n    * @serializeForm\n    * @params {string} selector - A jquery selector identifying the form\n    */\n    serializeForm: function(selector) {\n        var result = {};\n        var fields = this.$(selector).serializeArray();\n        _.each(fields, function(field) {\n            if (result[field.name]) {\n                if (!result[field.name].push) {\n                    result[field.name] = [result[field.name]];\n                }\n                result[field.name].push(field.value || '');\n            } else {\n                result[field.name] = field.value || '';\n            }\n        });\n        return result;\n    },\n\n    /**\n    * Remove all subviews and safely remove this view from the DOM. Implement an\n    * 'onClose' function for any additional clean up that is required before\n    * removing the view from the DOM.  This will trigger a 'closed' event just\n    * before removing from the DOM.\n    * @close\n    */\n    close: function() {\n        if (this.onClose && _.isFunction(this.onClose)) {\n            this.onClose.apply(this, arguments);\n        }\n        this.removeSubViews();\n        this.remove();\n        this.trigger('closed',this);\n        this.unbind();\n    }\n\n  });\n\n}));\n","//     Underscore.js 1.7.0\n//     http://underscorejs.org\n//     (c) 2009-2014 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n//     Underscore may be freely distributed under the MIT license.\n\n(function() {\n\n  // Baseline setup\n  // --------------\n\n  // Establish the root object, `window` in the browser, or `exports` on the server.\n  var root = this;\n\n  // Save the previous value of the `_` variable.\n  var previousUnderscore = root._;\n\n  // Save bytes in the minified (but not gzipped) version:\n  var ArrayProto = Array.prototype, ObjProto = Object.prototype, FuncProto = Function.prototype;\n\n  // Create quick reference variables for speed access to core prototypes.\n  var\n    push             = ArrayProto.push,\n    slice            = ArrayProto.slice,\n    concat           = ArrayProto.concat,\n    toString         = ObjProto.toString,\n    hasOwnProperty   = ObjProto.hasOwnProperty;\n\n  // All **ECMAScript 5** native function implementations that we hope to use\n  // are declared here.\n  var\n    nativeIsArray      = Array.isArray,\n    nativeKeys         = Object.keys,\n    nativeBind         = FuncProto.bind;\n\n  // Create a safe reference to the Underscore object for use below.\n  var _ = function(obj) {\n    if (obj instanceof _) return obj;\n    if (!(this instanceof _)) return new _(obj);\n    this._wrapped = obj;\n  };\n\n  // Export the Underscore object for **Node.js**, with\n  // backwards-compatibility for the old `require()` API. If we're in\n  // the browser, add `_` as a global object.\n  if (typeof exports !== 'undefined') {\n    if (typeof module !== 'undefined' && module.exports) {\n      exports = module.exports = _;\n    }\n    exports._ = _;\n  } else {\n    root._ = _;\n  }\n\n  // Current version.\n  _.VERSION = '1.7.0';\n\n  // Internal function that returns an efficient (for current engines) version\n  // of the passed-in callback, to be repeatedly applied in other Underscore\n  // functions.\n  var createCallback = function(func, context, argCount) {\n    if (context === void 0) return func;\n    switch (argCount == null ? 3 : argCount) {\n      case 1: return function(value) {\n        return func.call(context, value);\n      };\n      case 2: return function(value, other) {\n        return func.call(context, value, other);\n      };\n      case 3: return function(value, index, collection) {\n        return func.call(context, value, index, collection);\n      };\n      case 4: return function(accumulator, value, index, collection) {\n        return func.call(context, accumulator, value, index, collection);\n      };\n    }\n    return function() {\n      return func.apply(context, arguments);\n    };\n  };\n\n  // A mostly-internal function to generate callbacks that can be applied\n  // to each element in a collection, returning the desired result — either\n  // identity, an arbitrary callback, a property matcher, or a property accessor.\n  _.iteratee = function(value, context, argCount) {\n    if (value == null) return _.identity;\n    if (_.isFunction(value)) return createCallback(value, context, argCount);\n    if (_.isObject(value)) return _.matches(value);\n    return _.property(value);\n  };\n\n  // Collection Functions\n  // --------------------\n\n  // The cornerstone, an `each` implementation, aka `forEach`.\n  // Handles raw objects in addition to array-likes. Treats all\n  // sparse array-likes as if they were dense.\n  _.each = _.forEach = function(obj, iteratee, context) {\n    if (obj == null) return obj;\n    iteratee = createCallback(iteratee, context);\n    var i, length = obj.length;\n    if (length === +length) {\n      for (i = 0; i < length; i++) {\n        iteratee(obj[i], i, obj);\n      }\n    } else {\n      var keys = _.keys(obj);\n      for (i = 0, length = keys.length; i < length; i++) {\n        iteratee(obj[keys[i]], keys[i], obj);\n      }\n    }\n    return obj;\n  };\n\n  // Return the results of applying the iteratee to each element.\n  _.map = _.collect = function(obj, iteratee, context) {\n    if (obj == null) return [];\n    iteratee = _.iteratee(iteratee, context);\n    var keys = obj.length !== +obj.length && _.keys(obj),\n        length = (keys || obj).length,\n        results = Array(length),\n        currentKey;\n    for (var index = 0; index < length; index++) {\n      currentKey = keys ? keys[index] : index;\n      results[index] = iteratee(obj[currentKey], currentKey, obj);\n    }\n    return results;\n  };\n\n  var reduceError = 'Reduce of empty array with no initial value';\n\n  // **Reduce** builds up a single result from a list of values, aka `inject`,\n  // or `foldl`.\n  _.reduce = _.foldl = _.inject = function(obj, iteratee, memo, context) {\n    if (obj == null) obj = [];\n    iteratee = createCallback(iteratee, context, 4);\n    var keys = obj.length !== +obj.length && _.keys(obj),\n        length = (keys || obj).length,\n        index = 0, currentKey;\n    if (arguments.length < 3) {\n      if (!length) throw new TypeError(reduceError);\n      memo = obj[keys ? keys[index++] : index++];\n    }\n    for (; index < length; index++) {\n      currentKey = keys ? keys[index] : index;\n      memo = iteratee(memo, obj[currentKey], currentKey, obj);\n    }\n    return memo;\n  };\n\n  // The right-associative version of reduce, also known as `foldr`.\n  _.reduceRight = _.foldr = function(obj, iteratee, memo, context) {\n    if (obj == null) obj = [];\n    iteratee = createCallback(iteratee, context, 4);\n    var keys = obj.length !== + obj.length && _.keys(obj),\n        index = (keys || obj).length,\n        currentKey;\n    if (arguments.length < 3) {\n      if (!index) throw new TypeError(reduceError);\n      memo = obj[keys ? keys[--index] : --index];\n    }\n    while (index--) {\n      currentKey = keys ? keys[index] : index;\n      memo = iteratee(memo, obj[currentKey], currentKey, obj);\n    }\n    return memo;\n  };\n\n  // Return the first value which passes a truth test. Aliased as `detect`.\n  _.find = _.detect = function(obj, predicate, context) {\n    var result;\n    predicate = _.iteratee(predicate, context);\n    _.some(obj, function(value, index, list) {\n      if (predicate(value, index, list)) {\n        result = value;\n        return true;\n      }\n    });\n    return result;\n  };\n\n  // Return all the elements that pass a truth test.\n  // Aliased as `select`.\n  _.filter = _.select = function(obj, predicate, context) {\n    var results = [];\n    if (obj == null) return results;\n    predicate = _.iteratee(predicate, context);\n    _.each(obj, function(value, index, list) {\n      if (predicate(value, index, list)) results.push(value);\n    });\n    return results;\n  };\n\n  // Return all the elements for which a truth test fails.\n  _.reject = function(obj, predicate, context) {\n    return _.filter(obj, _.negate(_.iteratee(predicate)), context);\n  };\n\n  // Determine whether all of the elements match a truth test.\n  // Aliased as `all`.\n  _.every = _.all = function(obj, predicate, context) {\n    if (obj == null) return true;\n    predicate = _.iteratee(predicate, context);\n    var keys = obj.length !== +obj.length && _.keys(obj),\n        length = (keys || obj).length,\n        index, currentKey;\n    for (index = 0; index < length; index++) {\n      currentKey = keys ? keys[index] : index;\n      if (!predicate(obj[currentKey], currentKey, obj)) return false;\n    }\n    return true;\n  };\n\n  // Determine if at least one element in the object matches a truth test.\n  // Aliased as `any`.\n  _.some = _.any = function(obj, predicate, context) {\n    if (obj == null) return false;\n    predicate = _.iteratee(predicate, context);\n    var keys = obj.length !== +obj.length && _.keys(obj),\n        length = (keys || obj).length,\n        index, currentKey;\n    for (index = 0; index < length; index++) {\n      currentKey = keys ? keys[index] : index;\n      if (predicate(obj[currentKey], currentKey, obj)) return true;\n    }\n    return false;\n  };\n\n  // Determine if the array or object contains a given value (using `===`).\n  // Aliased as `include`.\n  _.contains = _.include = function(obj, target) {\n    if (obj == null) return false;\n    if (obj.length !== +obj.length) obj = _.values(obj);\n    return _.indexOf(obj, target) >= 0;\n  };\n\n  // Invoke a method (with arguments) on every item in a collection.\n  _.invoke = function(obj, method) {\n    var args = slice.call(arguments, 2);\n    var isFunc = _.isFunction(method);\n    return _.map(obj, function(value) {\n      return (isFunc ? method : value[method]).apply(value, args);\n    });\n  };\n\n  // Convenience version of a common use case of `map`: fetching a property.\n  _.pluck = function(obj, key) {\n    return _.map(obj, _.property(key));\n  };\n\n  // Convenience version of a common use case of `filter`: selecting only objects\n  // containing specific `key:value` pairs.\n  _.where = function(obj, attrs) {\n    return _.filter(obj, _.matches(attrs));\n  };\n\n  // Convenience version of a common use case of `find`: getting the first object\n  // containing specific `key:value` pairs.\n  _.findWhere = function(obj, attrs) {\n    return _.find(obj, _.matches(attrs));\n  };\n\n  // Return the maximum element (or element-based computation).\n  _.max = function(obj, iteratee, context) {\n    var result = -Infinity, lastComputed = -Infinity,\n        value, computed;\n    if (iteratee == null && obj != null) {\n      obj = obj.length === +obj.length ? obj : _.values(obj);\n      for (var i = 0, length = obj.length; i < length; i++) {\n        value = obj[i];\n        if (value > result) {\n          result = value;\n        }\n      }\n    } else {\n      iteratee = _.iteratee(iteratee, context);\n      _.each(obj, function(value, index, list) {\n        computed = iteratee(value, index, list);\n        if (computed > lastComputed || computed === -Infinity && result === -Infinity) {\n          result = value;\n          lastComputed = computed;\n        }\n      });\n    }\n    return result;\n  };\n\n  // Return the minimum element (or element-based computation).\n  _.min = function(obj, iteratee, context) {\n    var result = Infinity, lastComputed = Infinity,\n        value, computed;\n    if (iteratee == null && obj != null) {\n      obj = obj.length === +obj.length ? obj : _.values(obj);\n      for (var i = 0, length = obj.length; i < length; i++) {\n        value = obj[i];\n        if (value < result) {\n          result = value;\n        }\n      }\n    } else {\n      iteratee = _.iteratee(iteratee, context);\n      _.each(obj, function(value, index, list) {\n        computed = iteratee(value, index, list);\n        if (computed < lastComputed || computed === Infinity && result === Infinity) {\n          result = value;\n          lastComputed = computed;\n        }\n      });\n    }\n    return result;\n  };\n\n  // Shuffle a collection, using the modern version of the\n  // [Fisher-Yates shuffle](http://en.wikipedia.org/wiki/Fisher–Yates_shuffle).\n  _.shuffle = function(obj) {\n    var set = obj && obj.length === +obj.length ? obj : _.values(obj);\n    var length = set.length;\n    var shuffled = Array(length);\n    for (var index = 0, rand; index < length; index++) {\n      rand = _.random(0, index);\n      if (rand !== index) shuffled[index] = shuffled[rand];\n      shuffled[rand] = set[index];\n    }\n    return shuffled;\n  };\n\n  // Sample **n** random values from a collection.\n  // If **n** is not specified, returns a single random element.\n  // The internal `guard` argument allows it to work with `map`.\n  _.sample = function(obj, n, guard) {\n    if (n == null || guard) {\n      if (obj.length !== +obj.length) obj = _.values(obj);\n      return obj[_.random(obj.length - 1)];\n    }\n    return _.shuffle(obj).slice(0, Math.max(0, n));\n  };\n\n  // Sort the object's values by a criterion produced by an iteratee.\n  _.sortBy = function(obj, iteratee, context) {\n    iteratee = _.iteratee(iteratee, context);\n    return _.pluck(_.map(obj, function(value, index, list) {\n      return {\n        value: value,\n        index: index,\n        criteria: iteratee(value, index, list)\n      };\n    }).sort(function(left, right) {\n      var a = left.criteria;\n      var b = right.criteria;\n      if (a !== b) {\n        if (a > b || a === void 0) return 1;\n        if (a < b || b === void 0) return -1;\n      }\n      return left.index - right.index;\n    }), 'value');\n  };\n\n  // An internal function used for aggregate \"group by\" operations.\n  var group = function(behavior) {\n    return function(obj, iteratee, context) {\n      var result = {};\n      iteratee = _.iteratee(iteratee, context);\n      _.each(obj, function(value, index) {\n        var key = iteratee(value, index, obj);\n        behavior(result, value, key);\n      });\n      return result;\n    };\n  };\n\n  // Groups the object's values by a criterion. Pass either a string attribute\n  // to group by, or a function that returns the criterion.\n  _.groupBy = group(function(result, value, key) {\n    if (_.has(result, key)) result[key].push(value); else result[key] = [value];\n  });\n\n  // Indexes the object's values by a criterion, similar to `groupBy`, but for\n  // when you know that your index values will be unique.\n  _.indexBy = group(function(result, value, key) {\n    result[key] = value;\n  });\n\n  // Counts instances of an object that group by a certain criterion. Pass\n  // either a string attribute to count by, or a function that returns the\n  // criterion.\n  _.countBy = group(function(result, value, key) {\n    if (_.has(result, key)) result[key]++; else result[key] = 1;\n  });\n\n  // Use a comparator function to figure out the smallest index at which\n  // an object should be inserted so as to maintain order. Uses binary search.\n  _.sortedIndex = function(array, obj, iteratee, context) {\n    iteratee = _.iteratee(iteratee, context, 1);\n    var value = iteratee(obj);\n    var low = 0, high = array.length;\n    while (low < high) {\n      var mid = low + high >>> 1;\n      if (iteratee(array[mid]) < value) low = mid + 1; else high = mid;\n    }\n    return low;\n  };\n\n  // Safely create a real, live array from anything iterable.\n  _.toArray = function(obj) {\n    if (!obj) return [];\n    if (_.isArray(obj)) return slice.call(obj);\n    if (obj.length === +obj.length) return _.map(obj, _.identity);\n    return _.values(obj);\n  };\n\n  // Return the number of elements in an object.\n  _.size = function(obj) {\n    if (obj == null) return 0;\n    return obj.length === +obj.length ? obj.length : _.keys(obj).length;\n  };\n\n  // Split a collection into two arrays: one whose elements all satisfy the given\n  // predicate, and one whose elements all do not satisfy the predicate.\n  _.partition = function(obj, predicate, context) {\n    predicate = _.iteratee(predicate, context);\n    var pass = [], fail = [];\n    _.each(obj, function(value, key, obj) {\n      (predicate(value, key, obj) ? pass : fail).push(value);\n    });\n    return [pass, fail];\n  };\n\n  // Array Functions\n  // ---------------\n\n  // Get the first element of an array. Passing **n** will return the first N\n  // values in the array. Aliased as `head` and `take`. The **guard** check\n  // allows it to work with `_.map`.\n  _.first = _.head = _.take = function(array, n, guard) {\n    if (array == null) return void 0;\n    if (n == null || guard) return array[0];\n    if (n < 0) return [];\n    return slice.call(array, 0, n);\n  };\n\n  // Returns everything but the last entry of the array. Especially useful on\n  // the arguments object. Passing **n** will return all the values in\n  // the array, excluding the last N. The **guard** check allows it to work with\n  // `_.map`.\n  _.initial = function(array, n, guard) {\n    return slice.call(array, 0, Math.max(0, array.length - (n == null || guard ? 1 : n)));\n  };\n\n  // Get the last element of an array. Passing **n** will return the last N\n  // values in the array. The **guard** check allows it to work with `_.map`.\n  _.last = function(array, n, guard) {\n    if (array == null) return void 0;\n    if (n == null || guard) return array[array.length - 1];\n    return slice.call(array, Math.max(array.length - n, 0));\n  };\n\n  // Returns everything but the first entry of the array. Aliased as `tail` and `drop`.\n  // Especially useful on the arguments object. Passing an **n** will return\n  // the rest N values in the array. The **guard**\n  // check allows it to work with `_.map`.\n  _.rest = _.tail = _.drop = function(array, n, guard) {\n    return slice.call(array, n == null || guard ? 1 : n);\n  };\n\n  // Trim out all falsy values from an array.\n  _.compact = function(array) {\n    return _.filter(array, _.identity);\n  };\n\n  // Internal implementation of a recursive `flatten` function.\n  var flatten = function(input, shallow, strict, output) {\n    if (shallow && _.every(input, _.isArray)) {\n      return concat.apply(output, input);\n    }\n    for (var i = 0, length = input.length; i < length; i++) {\n      var value = input[i];\n      if (!_.isArray(value) && !_.isArguments(value)) {\n        if (!strict) output.push(value);\n      } else if (shallow) {\n        push.apply(output, value);\n      } else {\n        flatten(value, shallow, strict, output);\n      }\n    }\n    return output;\n  };\n\n  // Flatten out an array, either recursively (by default), or just one level.\n  _.flatten = function(array, shallow) {\n    return flatten(array, shallow, false, []);\n  };\n\n  // Return a version of the array that does not contain the specified value(s).\n  _.without = function(array) {\n    return _.difference(array, slice.call(arguments, 1));\n  };\n\n  // Produce a duplicate-free version of the array. If the array has already\n  // been sorted, you have the option of using a faster algorithm.\n  // Aliased as `unique`.\n  _.uniq = _.unique = function(array, isSorted, iteratee, context) {\n    if (array == null) return [];\n    if (!_.isBoolean(isSorted)) {\n      context = iteratee;\n      iteratee = isSorted;\n      isSorted = false;\n    }\n    if (iteratee != null) iteratee = _.iteratee(iteratee, context);\n    var result = [];\n    var seen = [];\n    for (var i = 0, length = array.length; i < length; i++) {\n      var value = array[i];\n      if (isSorted) {\n        if (!i || seen !== value) result.push(value);\n        seen = value;\n      } else if (iteratee) {\n        var computed = iteratee(value, i, array);\n        if (_.indexOf(seen, computed) < 0) {\n          seen.push(computed);\n          result.push(value);\n        }\n      } else if (_.indexOf(result, value) < 0) {\n        result.push(value);\n      }\n    }\n    return result;\n  };\n\n  // Produce an array that contains the union: each distinct element from all of\n  // the passed-in arrays.\n  _.union = function() {\n    return _.uniq(flatten(arguments, true, true, []));\n  };\n\n  // Produce an array that contains every item shared between all the\n  // passed-in arrays.\n  _.intersection = function(array) {\n    if (array == null) return [];\n    var result = [];\n    var argsLength = arguments.length;\n    for (var i = 0, length = array.length; i < length; i++) {\n      var item = array[i];\n      if (_.contains(result, item)) continue;\n      for (var j = 1; j < argsLength; j++) {\n        if (!_.contains(arguments[j], item)) break;\n      }\n      if (j === argsLength) result.push(item);\n    }\n    return result;\n  };\n\n  // Take the difference between one array and a number of other arrays.\n  // Only the elements present in just the first array will remain.\n  _.difference = function(array) {\n    var rest = flatten(slice.call(arguments, 1), true, true, []);\n    return _.filter(array, function(value){\n      return !_.contains(rest, value);\n    });\n  };\n\n  // Zip together multiple lists into a single array -- elements that share\n  // an index go together.\n  _.zip = function(array) {\n    if (array == null) return [];\n    var length = _.max(arguments, 'length').length;\n    var results = Array(length);\n    for (var i = 0; i < length; i++) {\n      results[i] = _.pluck(arguments, i);\n    }\n    return results;\n  };\n\n  // Converts lists into objects. Pass either a single array of `[key, value]`\n  // pairs, or two parallel arrays of the same length -- one of keys, and one of\n  // the corresponding values.\n  _.object = function(list, values) {\n    if (list == null) return {};\n    var result = {};\n    for (var i = 0, length = list.length; i < length; i++) {\n      if (values) {\n        result[list[i]] = values[i];\n      } else {\n        result[list[i][0]] = list[i][1];\n      }\n    }\n    return result;\n  };\n\n  // Return the position of the first occurrence of an item in an array,\n  // or -1 if the item is not included in the array.\n  // If the array is large and already in sort order, pass `true`\n  // for **isSorted** to use binary search.\n  _.indexOf = function(array, item, isSorted) {\n    if (array == null) return -1;\n    var i = 0, length = array.length;\n    if (isSorted) {\n      if (typeof isSorted == 'number') {\n        i = isSorted < 0 ? Math.max(0, length + isSorted) : isSorted;\n      } else {\n        i = _.sortedIndex(array, item);\n        return array[i] === item ? i : -1;\n      }\n    }\n    for (; i < length; i++) if (array[i] === item) return i;\n    return -1;\n  };\n\n  _.lastIndexOf = function(array, item, from) {\n    if (array == null) return -1;\n    var idx = array.length;\n    if (typeof from == 'number') {\n      idx = from < 0 ? idx + from + 1 : Math.min(idx, from + 1);\n    }\n    while (--idx >= 0) if (array[idx] === item) return idx;\n    return -1;\n  };\n\n  // Generate an integer Array containing an arithmetic progression. A port of\n  // the native Python `range()` function. See\n  // [the Python documentation](http://docs.python.org/library/functions.html#range).\n  _.range = function(start, stop, step) {\n    if (arguments.length <= 1) {\n      stop = start || 0;\n      start = 0;\n    }\n    step = step || 1;\n\n    var length = Math.max(Math.ceil((stop - start) / step), 0);\n    var range = Array(length);\n\n    for (var idx = 0; idx < length; idx++, start += step) {\n      range[idx] = start;\n    }\n\n    return range;\n  };\n\n  // Function (ahem) Functions\n  // ------------------\n\n  // Reusable constructor function for prototype setting.\n  var Ctor = function(){};\n\n  // Create a function bound to a given object (assigning `this`, and arguments,\n  // optionally). Delegates to **ECMAScript 5**'s native `Function.bind` if\n  // available.\n  _.bind = function(func, context) {\n    var args, bound;\n    if (nativeBind && func.bind === nativeBind) return nativeBind.apply(func, slice.call(arguments, 1));\n    if (!_.isFunction(func)) throw new TypeError('Bind must be called on a function');\n    args = slice.call(arguments, 2);\n    bound = function() {\n      if (!(this instanceof bound)) return func.apply(context, args.concat(slice.call(arguments)));\n      Ctor.prototype = func.prototype;\n      var self = new Ctor;\n      Ctor.prototype = null;\n      var result = func.apply(self, args.concat(slice.call(arguments)));\n      if (_.isObject(result)) return result;\n      return self;\n    };\n    return bound;\n  };\n\n  // Partially apply a function by creating a version that has had some of its\n  // arguments pre-filled, without changing its dynamic `this` context. _ acts\n  // as a placeholder, allowing any combination of arguments to be pre-filled.\n  _.partial = function(func) {\n    var boundArgs = slice.call(arguments, 1);\n    return function() {\n      var position = 0;\n      var args = boundArgs.slice();\n      for (var i = 0, length = args.length; i < length; i++) {\n        if (args[i] === _) args[i] = arguments[position++];\n      }\n      while (position < arguments.length) args.push(arguments[position++]);\n      return func.apply(this, args);\n    };\n  };\n\n  // Bind a number of an object's methods to that object. Remaining arguments\n  // are the method names to be bound. Useful for ensuring that all callbacks\n  // defined on an object belong to it.\n  _.bindAll = function(obj) {\n    var i, length = arguments.length, key;\n    if (length <= 1) throw new Error('bindAll must be passed function names');\n    for (i = 1; i < length; i++) {\n      key = arguments[i];\n      obj[key] = _.bind(obj[key], obj);\n    }\n    return obj;\n  };\n\n  // Memoize an expensive function by storing its results.\n  _.memoize = function(func, hasher) {\n    var memoize = function(key) {\n      var cache = memoize.cache;\n      var address = hasher ? hasher.apply(this, arguments) : key;\n      if (!_.has(cache, address)) cache[address] = func.apply(this, arguments);\n      return cache[address];\n    };\n    memoize.cache = {};\n    return memoize;\n  };\n\n  // Delays a function for the given number of milliseconds, and then calls\n  // it with the arguments supplied.\n  _.delay = function(func, wait) {\n    var args = slice.call(arguments, 2);\n    return setTimeout(function(){\n      return func.apply(null, args);\n    }, wait);\n  };\n\n  // Defers a function, scheduling it to run after the current call stack has\n  // cleared.\n  _.defer = function(func) {\n    return _.delay.apply(_, [func, 1].concat(slice.call(arguments, 1)));\n  };\n\n  // Returns a function, that, when invoked, will only be triggered at most once\n  // during a given window of time. Normally, the throttled function will run\n  // as much as it can, without ever going more than once per `wait` duration;\n  // but if you'd like to disable the execution on the leading edge, pass\n  // `{leading: false}`. To disable execution on the trailing edge, ditto.\n  _.throttle = function(func, wait, options) {\n    var context, args, result;\n    var timeout = null;\n    var previous = 0;\n    if (!options) options = {};\n    var later = function() {\n      previous = options.leading === false ? 0 : _.now();\n      timeout = null;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    };\n    return function() {\n      var now = _.now();\n      if (!previous && options.leading === false) previous = now;\n      var remaining = wait - (now - previous);\n      context = this;\n      args = arguments;\n      if (remaining <= 0 || remaining > wait) {\n        clearTimeout(timeout);\n        timeout = null;\n        previous = now;\n        result = func.apply(context, args);\n        if (!timeout) context = args = null;\n      } else if (!timeout && options.trailing !== false) {\n        timeout = setTimeout(later, remaining);\n      }\n      return result;\n    };\n  };\n\n  // Returns a function, that, as long as it continues to be invoked, will not\n  // be triggered. The function will be called after it stops being called for\n  // N milliseconds. If `immediate` is passed, trigger the function on the\n  // leading edge, instead of the trailing.\n  _.debounce = function(func, wait, immediate) {\n    var timeout, args, context, timestamp, result;\n\n    var later = function() {\n      var last = _.now() - timestamp;\n\n      if (last < wait && last > 0) {\n        timeout = setTimeout(later, wait - last);\n      } else {\n        timeout = null;\n        if (!immediate) {\n          result = func.apply(context, args);\n          if (!timeout) context = args = null;\n        }\n      }\n    };\n\n    return function() {\n      context = this;\n      args = arguments;\n      timestamp = _.now();\n      var callNow = immediate && !timeout;\n      if (!timeout) timeout = setTimeout(later, wait);\n      if (callNow) {\n        result = func.apply(context, args);\n        context = args = null;\n      }\n\n      return result;\n    };\n  };\n\n  // Returns the first function passed as an argument to the second,\n  // allowing you to adjust arguments, run code before and after, and\n  // conditionally execute the original function.\n  _.wrap = function(func, wrapper) {\n    return _.partial(wrapper, func);\n  };\n\n  // Returns a negated version of the passed-in predicate.\n  _.negate = function(predicate) {\n    return function() {\n      return !predicate.apply(this, arguments);\n    };\n  };\n\n  // Returns a function that is the composition of a list of functions, each\n  // consuming the return value of the function that follows.\n  _.compose = function() {\n    var args = arguments;\n    var start = args.length - 1;\n    return function() {\n      var i = start;\n      var result = args[start].apply(this, arguments);\n      while (i--) result = args[i].call(this, result);\n      return result;\n    };\n  };\n\n  // Returns a function that will only be executed after being called N times.\n  _.after = function(times, func) {\n    return function() {\n      if (--times < 1) {\n        return func.apply(this, arguments);\n      }\n    };\n  };\n\n  // Returns a function that will only be executed before being called N times.\n  _.before = function(times, func) {\n    var memo;\n    return function() {\n      if (--times > 0) {\n        memo = func.apply(this, arguments);\n      } else {\n        func = null;\n      }\n      return memo;\n    };\n  };\n\n  // Returns a function that will be executed at most one time, no matter how\n  // often you call it. Useful for lazy initialization.\n  _.once = _.partial(_.before, 2);\n\n  // Object Functions\n  // ----------------\n\n  // Retrieve the names of an object's properties.\n  // Delegates to **ECMAScript 5**'s native `Object.keys`\n  _.keys = function(obj) {\n    if (!_.isObject(obj)) return [];\n    if (nativeKeys) return nativeKeys(obj);\n    var keys = [];\n    for (var key in obj) if (_.has(obj, key)) keys.push(key);\n    return keys;\n  };\n\n  // Retrieve the values of an object's properties.\n  _.values = function(obj) {\n    var keys = _.keys(obj);\n    var length = keys.length;\n    var values = Array(length);\n    for (var i = 0; i < length; i++) {\n      values[i] = obj[keys[i]];\n    }\n    return values;\n  };\n\n  // Convert an object into a list of `[key, value]` pairs.\n  _.pairs = function(obj) {\n    var keys = _.keys(obj);\n    var length = keys.length;\n    var pairs = Array(length);\n    for (var i = 0; i < length; i++) {\n      pairs[i] = [keys[i], obj[keys[i]]];\n    }\n    return pairs;\n  };\n\n  // Invert the keys and values of an object. The values must be serializable.\n  _.invert = function(obj) {\n    var result = {};\n    var keys = _.keys(obj);\n    for (var i = 0, length = keys.length; i < length; i++) {\n      result[obj[keys[i]]] = keys[i];\n    }\n    return result;\n  };\n\n  // Return a sorted list of the function names available on the object.\n  // Aliased as `methods`\n  _.functions = _.methods = function(obj) {\n    var names = [];\n    for (var key in obj) {\n      if (_.isFunction(obj[key])) names.push(key);\n    }\n    return names.sort();\n  };\n\n  // Extend a given object with all the properties in passed-in object(s).\n  _.extend = function(obj) {\n    if (!_.isObject(obj)) return obj;\n    var source, prop;\n    for (var i = 1, length = arguments.length; i < length; i++) {\n      source = arguments[i];\n      for (prop in source) {\n        if (hasOwnProperty.call(source, prop)) {\n            obj[prop] = source[prop];\n        }\n      }\n    }\n    return obj;\n  };\n\n  // Return a copy of the object only containing the whitelisted properties.\n  _.pick = function(obj, iteratee, context) {\n    var result = {}, key;\n    if (obj == null) return result;\n    if (_.isFunction(iteratee)) {\n      iteratee = createCallback(iteratee, context);\n      for (key in obj) {\n        var value = obj[key];\n        if (iteratee(value, key, obj)) result[key] = value;\n      }\n    } else {\n      var keys = concat.apply([], slice.call(arguments, 1));\n      obj = new Object(obj);\n      for (var i = 0, length = keys.length; i < length; i++) {\n        key = keys[i];\n        if (key in obj) result[key] = obj[key];\n      }\n    }\n    return result;\n  };\n\n   // Return a copy of the object without the blacklisted properties.\n  _.omit = function(obj, iteratee, context) {\n    if (_.isFunction(iteratee)) {\n      iteratee = _.negate(iteratee);\n    } else {\n      var keys = _.map(concat.apply([], slice.call(arguments, 1)), String);\n      iteratee = function(value, key) {\n        return !_.contains(keys, key);\n      };\n    }\n    return _.pick(obj, iteratee, context);\n  };\n\n  // Fill in a given object with default properties.\n  _.defaults = function(obj) {\n    if (!_.isObject(obj)) return obj;\n    for (var i = 1, length = arguments.length; i < length; i++) {\n      var source = arguments[i];\n      for (var prop in source) {\n        if (obj[prop] === void 0) obj[prop] = source[prop];\n      }\n    }\n    return obj;\n  };\n\n  // Create a (shallow-cloned) duplicate of an object.\n  _.clone = function(obj) {\n    if (!_.isObject(obj)) return obj;\n    return _.isArray(obj) ? obj.slice() : _.extend({}, obj);\n  };\n\n  // Invokes interceptor with the obj, and then returns obj.\n  // The primary purpose of this method is to \"tap into\" a method chain, in\n  // order to perform operations on intermediate results within the chain.\n  _.tap = function(obj, interceptor) {\n    interceptor(obj);\n    return obj;\n  };\n\n  // Internal recursive comparison function for `isEqual`.\n  var eq = function(a, b, aStack, bStack) {\n    // Identical objects are equal. `0 === -0`, but they aren't identical.\n    // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\n    if (a === b) return a !== 0 || 1 / a === 1 / b;\n    // A strict comparison is necessary because `null == undefined`.\n    if (a == null || b == null) return a === b;\n    // Unwrap any wrapped objects.\n    if (a instanceof _) a = a._wrapped;\n    if (b instanceof _) b = b._wrapped;\n    // Compare `[[Class]]` names.\n    var className = toString.call(a);\n    if (className !== toString.call(b)) return false;\n    switch (className) {\n      // Strings, numbers, regular expressions, dates, and booleans are compared by value.\n      case '[object RegExp]':\n      // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\n      case '[object String]':\n        // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\n        // equivalent to `new String(\"5\")`.\n        return '' + a === '' + b;\n      case '[object Number]':\n        // `NaN`s are equivalent, but non-reflexive.\n        // Object(NaN) is equivalent to NaN\n        if (+a !== +a) return +b !== +b;\n        // An `egal` comparison is performed for other numeric values.\n        return +a === 0 ? 1 / +a === 1 / b : +a === +b;\n      case '[object Date]':\n      case '[object Boolean]':\n        // Coerce dates and booleans to numeric primitive values. Dates are compared by their\n        // millisecond representations. Note that invalid dates with millisecond representations\n        // of `NaN` are not equivalent.\n        return +a === +b;\n    }\n    if (typeof a != 'object' || typeof b != 'object') return false;\n    // Assume equality for cyclic structures. The algorithm for detecting cyclic\n    // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\n    var length = aStack.length;\n    while (length--) {\n      // Linear search. Performance is inversely proportional to the number of\n      // unique nested structures.\n      if (aStack[length] === a) return bStack[length] === b;\n    }\n    // Objects with different constructors are not equivalent, but `Object`s\n    // from different frames are.\n    var aCtor = a.constructor, bCtor = b.constructor;\n    if (\n      aCtor !== bCtor &&\n      // Handle Object.create(x) cases\n      'constructor' in a && 'constructor' in b &&\n      !(_.isFunction(aCtor) && aCtor instanceof aCtor &&\n        _.isFunction(bCtor) && bCtor instanceof bCtor)\n    ) {\n      return false;\n    }\n    // Add the first object to the stack of traversed objects.\n    aStack.push(a);\n    bStack.push(b);\n    var size, result;\n    // Recursively compare objects and arrays.\n    if (className === '[object Array]') {\n      // Compare array lengths to determine if a deep comparison is necessary.\n      size = a.length;\n      result = size === b.length;\n      if (result) {\n        // Deep compare the contents, ignoring non-numeric properties.\n        while (size--) {\n          if (!(result = eq(a[size], b[size], aStack, bStack))) break;\n        }\n      }\n    } else {\n      // Deep compare objects.\n      var keys = _.keys(a), key;\n      size = keys.length;\n      // Ensure that both objects contain the same number of properties before comparing deep equality.\n      result = _.keys(b).length === size;\n      if (result) {\n        while (size--) {\n          // Deep compare each member\n          key = keys[size];\n          if (!(result = _.has(b, key) && eq(a[key], b[key], aStack, bStack))) break;\n        }\n      }\n    }\n    // Remove the first object from the stack of traversed objects.\n    aStack.pop();\n    bStack.pop();\n    return result;\n  };\n\n  // Perform a deep comparison to check if two objects are equal.\n  _.isEqual = function(a, b) {\n    return eq(a, b, [], []);\n  };\n\n  // Is a given array, string, or object empty?\n  // An \"empty\" object has no enumerable own-properties.\n  _.isEmpty = function(obj) {\n    if (obj == null) return true;\n    if (_.isArray(obj) || _.isString(obj) || _.isArguments(obj)) return obj.length === 0;\n    for (var key in obj) if (_.has(obj, key)) return false;\n    return true;\n  };\n\n  // Is a given value a DOM element?\n  _.isElement = function(obj) {\n    return !!(obj && obj.nodeType === 1);\n  };\n\n  // Is a given value an array?\n  // Delegates to ECMA5's native Array.isArray\n  _.isArray = nativeIsArray || function(obj) {\n    return toString.call(obj) === '[object Array]';\n  };\n\n  // Is a given variable an object?\n  _.isObject = function(obj) {\n    var type = typeof obj;\n    return type === 'function' || type === 'object' && !!obj;\n  };\n\n  // Add some isType methods: isArguments, isFunction, isString, isNumber, isDate, isRegExp.\n  _.each(['Arguments', 'Function', 'String', 'Number', 'Date', 'RegExp'], function(name) {\n    _['is' + name] = function(obj) {\n      return toString.call(obj) === '[object ' + name + ']';\n    };\n  });\n\n  // Define a fallback version of the method in browsers (ahem, IE), where\n  // there isn't any inspectable \"Arguments\" type.\n  if (!_.isArguments(arguments)) {\n    _.isArguments = function(obj) {\n      return _.has(obj, 'callee');\n    };\n  }\n\n  // Optimize `isFunction` if appropriate. Work around an IE 11 bug.\n  if (typeof /./ !== 'function') {\n    _.isFunction = function(obj) {\n      return typeof obj == 'function' || false;\n    };\n  }\n\n  // Is a given object a finite number?\n  _.isFinite = function(obj) {\n    return isFinite(obj) && !isNaN(parseFloat(obj));\n  };\n\n  // Is the given value `NaN`? (NaN is the only number which does not equal itself).\n  _.isNaN = function(obj) {\n    return _.isNumber(obj) && obj !== +obj;\n  };\n\n  // Is a given value a boolean?\n  _.isBoolean = function(obj) {\n    return obj === true || obj === false || toString.call(obj) === '[object Boolean]';\n  };\n\n  // Is a given value equal to null?\n  _.isNull = function(obj) {\n    return obj === null;\n  };\n\n  // Is a given variable undefined?\n  _.isUndefined = function(obj) {\n    return obj === void 0;\n  };\n\n  // Shortcut function for checking if an object has a given property directly\n  // on itself (in other words, not on a prototype).\n  _.has = function(obj, key) {\n    return obj != null && hasOwnProperty.call(obj, key);\n  };\n\n  // Utility Functions\n  // -----------------\n\n  // Run Underscore.js in *noConflict* mode, returning the `_` variable to its\n  // previous owner. Returns a reference to the Underscore object.\n  _.noConflict = function() {\n    root._ = previousUnderscore;\n    return this;\n  };\n\n  // Keep the identity function around for default iteratees.\n  _.identity = function(value) {\n    return value;\n  };\n\n  _.constant = function(value) {\n    return function() {\n      return value;\n    };\n  };\n\n  _.noop = function(){};\n\n  _.property = function(key) {\n    return function(obj) {\n      return obj[key];\n    };\n  };\n\n  // Returns a predicate for checking whether an object has a given set of `key:value` pairs.\n  _.matches = function(attrs) {\n    var pairs = _.pairs(attrs), length = pairs.length;\n    return function(obj) {\n      if (obj == null) return !length;\n      obj = new Object(obj);\n      for (var i = 0; i < length; i++) {\n        var pair = pairs[i], key = pair[0];\n        if (pair[1] !== obj[key] || !(key in obj)) return false;\n      }\n      return true;\n    };\n  };\n\n  // Run a function **n** times.\n  _.times = function(n, iteratee, context) {\n    var accum = Array(Math.max(0, n));\n    iteratee = createCallback(iteratee, context, 1);\n    for (var i = 0; i < n; i++) accum[i] = iteratee(i);\n    return accum;\n  };\n\n  // Return a random integer between min and max (inclusive).\n  _.random = function(min, max) {\n    if (max == null) {\n      max = min;\n      min = 0;\n    }\n    return min + Math.floor(Math.random() * (max - min + 1));\n  };\n\n  // A (possibly faster) way to get the current timestamp as an integer.\n  _.now = Date.now || function() {\n    return new Date().getTime();\n  };\n\n   // List of HTML entities for escaping.\n  var escapeMap = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#x27;',\n    '`': '&#x60;'\n  };\n  var unescapeMap = _.invert(escapeMap);\n\n  // Functions for escaping and unescaping strings to/from HTML interpolation.\n  var createEscaper = function(map) {\n    var escaper = function(match) {\n      return map[match];\n    };\n    // Regexes for identifying a key that needs to be escaped\n    var source = '(?:' + _.keys(map).join('|') + ')';\n    var testRegexp = RegExp(source);\n    var replaceRegexp = RegExp(source, 'g');\n    return function(string) {\n      string = string == null ? '' : '' + string;\n      return testRegexp.test(string) ? string.replace(replaceRegexp, escaper) : string;\n    };\n  };\n  _.escape = createEscaper(escapeMap);\n  _.unescape = createEscaper(unescapeMap);\n\n  // If the value of the named `property` is a function then invoke it with the\n  // `object` as context; otherwise, return it.\n  _.result = function(object, property) {\n    if (object == null) return void 0;\n    var value = object[property];\n    return _.isFunction(value) ? object[property]() : value;\n  };\n\n  // Generate a unique integer id (unique within the entire client session).\n  // Useful for temporary DOM ids.\n  var idCounter = 0;\n  _.uniqueId = function(prefix) {\n    var id = ++idCounter + '';\n    return prefix ? prefix + id : id;\n  };\n\n  // By default, Underscore uses ERB-style template delimiters, change the\n  // following template settings to use alternative delimiters.\n  _.templateSettings = {\n    evaluate    : /<%([\\s\\S]+?)%>/g,\n    interpolate : /<%=([\\s\\S]+?)%>/g,\n    escape      : /<%-([\\s\\S]+?)%>/g\n  };\n\n  // When customizing `templateSettings`, if you don't want to define an\n  // interpolation, evaluation or escaping regex, we need one that is\n  // guaranteed not to match.\n  var noMatch = /(.)^/;\n\n  // Certain characters need to be escaped so that they can be put into a\n  // string literal.\n  var escapes = {\n    \"'\":      \"'\",\n    '\\\\':     '\\\\',\n    '\\r':     'r',\n    '\\n':     'n',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  var escaper = /\\\\|'|\\r|\\n|\\u2028|\\u2029/g;\n\n  var escapeChar = function(match) {\n    return '\\\\' + escapes[match];\n  };\n\n  // JavaScript micro-templating, similar to John Resig's implementation.\n  // Underscore templating handles arbitrary delimiters, preserves whitespace,\n  // and correctly escapes quotes within interpolated code.\n  // NB: `oldSettings` only exists for backwards compatibility.\n  _.template = function(text, settings, oldSettings) {\n    if (!settings && oldSettings) settings = oldSettings;\n    settings = _.defaults({}, settings, _.templateSettings);\n\n    // Combine delimiters into one regular expression via alternation.\n    var matcher = RegExp([\n      (settings.escape || noMatch).source,\n      (settings.interpolate || noMatch).source,\n      (settings.evaluate || noMatch).source\n    ].join('|') + '|$', 'g');\n\n    // Compile the template source, escaping string literals appropriately.\n    var index = 0;\n    var source = \"__p+='\";\n    text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {\n      source += text.slice(index, offset).replace(escaper, escapeChar);\n      index = offset + match.length;\n\n      if (escape) {\n        source += \"'+\\n((__t=(\" + escape + \"))==null?'':_.escape(__t))+\\n'\";\n      } else if (interpolate) {\n        source += \"'+\\n((__t=(\" + interpolate + \"))==null?'':__t)+\\n'\";\n      } else if (evaluate) {\n        source += \"';\\n\" + evaluate + \"\\n__p+='\";\n      }\n\n      // Adobe VMs need the match returned to produce the correct offest.\n      return match;\n    });\n    source += \"';\\n\";\n\n    // If a variable is not specified, place data values in local scope.\n    if (!settings.variable) source = 'with(obj||{}){\\n' + source + '}\\n';\n\n    source = \"var __t,__p='',__j=Array.prototype.join,\" +\n      \"print=function(){__p+=__j.call(arguments,'');};\\n\" +\n      source + 'return __p;\\n';\n\n    try {\n      var render = new Function(settings.variable || 'obj', '_', source);\n    } catch (e) {\n      e.source = source;\n      throw e;\n    }\n\n    var template = function(data) {\n      return render.call(this, data, _);\n    };\n\n    // Provide the compiled source as a convenience for precompilation.\n    var argument = settings.variable || 'obj';\n    template.source = 'function(' + argument + '){\\n' + source + '}';\n\n    return template;\n  };\n\n  // Add a \"chain\" function. Start chaining a wrapped Underscore object.\n  _.chain = function(obj) {\n    var instance = _(obj);\n    instance._chain = true;\n    return instance;\n  };\n\n  // OOP\n  // ---------------\n  // If Underscore is called as a function, it returns a wrapped object that\n  // can be used OO-style. This wrapper holds altered versions of all the\n  // underscore functions. Wrapped objects may be chained.\n\n  // Helper function to continue chaining intermediate results.\n  var result = function(obj) {\n    return this._chain ? _(obj).chain() : obj;\n  };\n\n  // Add your own custom functions to the Underscore object.\n  _.mixin = function(obj) {\n    _.each(_.functions(obj), function(name) {\n      var func = _[name] = obj[name];\n      _.prototype[name] = function() {\n        var args = [this._wrapped];\n        push.apply(args, arguments);\n        return result.call(this, func.apply(_, args));\n      };\n    });\n  };\n\n  // Add all of the Underscore functions to the wrapper object.\n  _.mixin(_);\n\n  // Add all mutator Array functions to the wrapper.\n  _.each(['pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift'], function(name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function() {\n      var obj = this._wrapped;\n      method.apply(obj, arguments);\n      if ((name === 'shift' || name === 'splice') && obj.length === 0) delete obj[0];\n      return result.call(this, obj);\n    };\n  });\n\n  // Add all accessor Array functions to the wrapper.\n  _.each(['concat', 'join', 'slice'], function(name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function() {\n      return result.call(this, method.apply(this._wrapped, arguments));\n    };\n  });\n\n  // Extracts the result from a wrapped and chained object.\n  _.prototype.value = function() {\n    return this._wrapped;\n  };\n\n  // AMD registration happens at the end for compatibility with AMD loaders\n  // that may not enforce next-turn semantics on modules. Even though general\n  // practice for AMD registration is to be anonymous, underscore registers\n  // as a named module because, like jQuery, it is a base library that is\n  // popular enough to be bundled in a third party lib, but not be part of\n  // an AMD load request. Those cases could generate an error when an\n  // anonymous define() is called outside of a loader request.\n  if (typeof define === 'function' && define.amd) {\n    define('underscore', [], function() {\n      return _;\n    });\n  }\n}.call(this));\n","//     Backbone.js 1.1.2\n\n//     (c) 2010-2014 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n//     Backbone may be freely distributed under the MIT license.\n//     For all details and documentation:\n//     http://backbonejs.org\n\n(function(root, factory) {\n\n  // Set up Backbone appropriately for the environment. Start with AMD.\n  if (typeof define === 'function' && define.amd) {\n    define(['underscore', 'jquery', 'exports'], function(_, $, exports) {\n      // Export global even in AMD case in case this script is loaded with\n      // others that may still expect a global Backbone.\n      root.Backbone = factory(root, exports, _, $);\n    });\n\n  // Next for Node.js or CommonJS. jQuery may not be needed as a module.\n  } else if (typeof exports !== 'undefined') {\n    var _ = require('underscore');\n    factory(root, exports, _);\n\n  // Finally, as a browser global.\n  } else {\n    root.Backbone = factory(root, {}, root._, (root.jQuery || root.Zepto || root.ender || root.$));\n  }\n\n}(this, function(root, Backbone, _, $) {\n\n  // Initial Setup\n  // -------------\n\n  // Save the previous value of the `Backbone` variable, so that it can be\n  // restored later on, if `noConflict` is used.\n  var previousBackbone = root.Backbone;\n\n  // Create local references to array methods we'll want to use later.\n  var array = [];\n  var push = array.push;\n  var slice = array.slice;\n  var splice = array.splice;\n\n  // Current version of the library. Keep in sync with `package.json`.\n  Backbone.VERSION = '1.1.2';\n\n  // For Backbone's purposes, jQuery, Zepto, Ender, or My Library (kidding) owns\n  // the `$` variable.\n  Backbone.$ = $;\n\n  // Runs Backbone.js in *noConflict* mode, returning the `Backbone` variable\n  // to its previous owner. Returns a reference to this Backbone object.\n  Backbone.noConflict = function() {\n    root.Backbone = previousBackbone;\n    return this;\n  };\n\n  // Turn on `emulateHTTP` to support legacy HTTP servers. Setting this option\n  // will fake `\"PATCH\"`, `\"PUT\"` and `\"DELETE\"` requests via the `_method` parameter and\n  // set a `X-Http-Method-Override` header.\n  Backbone.emulateHTTP = false;\n\n  // Turn on `emulateJSON` to support legacy servers that can't deal with direct\n  // `application/json` requests ... will encode the body as\n  // `application/x-www-form-urlencoded` instead and will send the model in a\n  // form param named `model`.\n  Backbone.emulateJSON = false;\n\n  // Backbone.Events\n  // ---------------\n\n  // A module that can be mixed in to *any object* in order to provide it with\n  // custom events. You may bind with `on` or remove with `off` callback\n  // functions to an event; `trigger`-ing an event fires all callbacks in\n  // succession.\n  //\n  //     var object = {};\n  //     _.extend(object, Backbone.Events);\n  //     object.on('expand', function(){ alert('expanded'); });\n  //     object.trigger('expand');\n  //\n  var Events = Backbone.Events = {\n\n    // Bind an event to a `callback` function. Passing `\"all\"` will bind\n    // the callback to all events fired.\n    on: function(name, callback, context) {\n      if (!eventsApi(this, 'on', name, [callback, context]) || !callback) return this;\n      this._events || (this._events = {});\n      var events = this._events[name] || (this._events[name] = []);\n      events.push({callback: callback, context: context, ctx: context || this});\n      return this;\n    },\n\n    // Bind an event to only be triggered a single time. After the first time\n    // the callback is invoked, it will be removed.\n    once: function(name, callback, context) {\n      if (!eventsApi(this, 'once', name, [callback, context]) || !callback) return this;\n      var self = this;\n      var once = _.once(function() {\n        self.off(name, once);\n        callback.apply(this, arguments);\n      });\n      once._callback = callback;\n      return this.on(name, once, context);\n    },\n\n    // Remove one or many callbacks. If `context` is null, removes all\n    // callbacks with that function. If `callback` is null, removes all\n    // callbacks for the event. If `name` is null, removes all bound\n    // callbacks for all events.\n    off: function(name, callback, context) {\n      var retain, ev, events, names, i, l, j, k;\n      if (!this._events || !eventsApi(this, 'off', name, [callback, context])) return this;\n      if (!name && !callback && !context) {\n        this._events = void 0;\n        return this;\n      }\n      names = name ? [name] : _.keys(this._events);\n      for (i = 0, l = names.length; i < l; i++) {\n        name = names[i];\n        if (events = this._events[name]) {\n          this._events[name] = retain = [];\n          if (callback || context) {\n            for (j = 0, k = events.length; j < k; j++) {\n              ev = events[j];\n              if ((callback && callback !== ev.callback && callback !== ev.callback._callback) ||\n                  (context && context !== ev.context)) {\n                retain.push(ev);\n              }\n            }\n          }\n          if (!retain.length) delete this._events[name];\n        }\n      }\n\n      return this;\n    },\n\n    // Trigger one or many events, firing all bound callbacks. Callbacks are\n    // passed the same arguments as `trigger` is, apart from the event name\n    // (unless you're listening on `\"all\"`, which will cause your callback to\n    // receive the true name of the event as the first argument).\n    trigger: function(name) {\n      if (!this._events) return this;\n      var args = slice.call(arguments, 1);\n      if (!eventsApi(this, 'trigger', name, args)) return this;\n      var events = this._events[name];\n      var allEvents = this._events.all;\n      if (events) triggerEvents(events, args);\n      if (allEvents) triggerEvents(allEvents, arguments);\n      return this;\n    },\n\n    // Tell this object to stop listening to either specific events ... or\n    // to every object it's currently listening to.\n    stopListening: function(obj, name, callback) {\n      var listeningTo = this._listeningTo;\n      if (!listeningTo) return this;\n      var remove = !name && !callback;\n      if (!callback && typeof name === 'object') callback = this;\n      if (obj) (listeningTo = {})[obj._listenId] = obj;\n      for (var id in listeningTo) {\n        obj = listeningTo[id];\n        obj.off(name, callback, this);\n        if (remove || _.isEmpty(obj._events)) delete this._listeningTo[id];\n      }\n      return this;\n    }\n\n  };\n\n  // Regular expression used to split event strings.\n  var eventSplitter = /\\s+/;\n\n  // Implement fancy features of the Events API such as multiple event\n  // names `\"change blur\"` and jQuery-style event maps `{change: action}`\n  // in terms of the existing API.\n  var eventsApi = function(obj, action, name, rest) {\n    if (!name) return true;\n\n    // Handle event maps.\n    if (typeof name === 'object') {\n      for (var key in name) {\n        obj[action].apply(obj, [key, name[key]].concat(rest));\n      }\n      return false;\n    }\n\n    // Handle space separated event names.\n    if (eventSplitter.test(name)) {\n      var names = name.split(eventSplitter);\n      for (var i = 0, l = names.length; i < l; i++) {\n        obj[action].apply(obj, [names[i]].concat(rest));\n      }\n      return false;\n    }\n\n    return true;\n  };\n\n  // A difficult-to-believe, but optimized internal dispatch function for\n  // triggering events. Tries to keep the usual cases speedy (most internal\n  // Backbone events have 3 arguments).\n  var triggerEvents = function(events, args) {\n    var ev, i = -1, l = events.length, a1 = args[0], a2 = args[1], a3 = args[2];\n    switch (args.length) {\n      case 0: while (++i < l) (ev = events[i]).callback.call(ev.ctx); return;\n      case 1: while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1); return;\n      case 2: while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1, a2); return;\n      case 3: while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1, a2, a3); return;\n      default: while (++i < l) (ev = events[i]).callback.apply(ev.ctx, args); return;\n    }\n  };\n\n  var listenMethods = {listenTo: 'on', listenToOnce: 'once'};\n\n  // Inversion-of-control versions of `on` and `once`. Tell *this* object to\n  // listen to an event in another object ... keeping track of what it's\n  // listening to.\n  _.each(listenMethods, function(implementation, method) {\n    Events[method] = function(obj, name, callback) {\n      var listeningTo = this._listeningTo || (this._listeningTo = {});\n      var id = obj._listenId || (obj._listenId = _.uniqueId('l'));\n      listeningTo[id] = obj;\n      if (!callback && typeof name === 'object') callback = this;\n      obj[implementation](name, callback, this);\n      return this;\n    };\n  });\n\n  // Aliases for backwards compatibility.\n  Events.bind   = Events.on;\n  Events.unbind = Events.off;\n\n  // Allow the `Backbone` object to serve as a global event bus, for folks who\n  // want global \"pubsub\" in a convenient place.\n  _.extend(Backbone, Events);\n\n  // Backbone.Model\n  // --------------\n\n  // Backbone **Models** are the basic data object in the framework --\n  // frequently representing a row in a table in a database on your server.\n  // A discrete chunk of data and a bunch of useful, related methods for\n  // performing computations and transformations on that data.\n\n  // Create a new model with the specified attributes. A client id (`cid`)\n  // is automatically generated and assigned for you.\n  var Model = Backbone.Model = function(attributes, options) {\n    var attrs = attributes || {};\n    options || (options = {});\n    this.cid = _.uniqueId('c');\n    this.attributes = {};\n    if (options.collection) this.collection = options.collection;\n    if (options.parse) attrs = this.parse(attrs, options) || {};\n    attrs = _.defaults({}, attrs, _.result(this, 'defaults'));\n    this.set(attrs, options);\n    this.changed = {};\n    this.initialize.apply(this, arguments);\n  };\n\n  // Attach all inheritable methods to the Model prototype.\n  _.extend(Model.prototype, Events, {\n\n    // A hash of attributes whose current and previous value differ.\n    changed: null,\n\n    // The value returned during the last failed validation.\n    validationError: null,\n\n    // The default name for the JSON `id` attribute is `\"id\"`. MongoDB and\n    // CouchDB users may want to set this to `\"_id\"`.\n    idAttribute: 'id',\n\n    // Initialize is an empty function by default. Override it with your own\n    // initialization logic.\n    initialize: function(){},\n\n    // Return a copy of the model's `attributes` object.\n    toJSON: function(options) {\n      return _.clone(this.attributes);\n    },\n\n    // Proxy `Backbone.sync` by default -- but override this if you need\n    // custom syncing semantics for *this* particular model.\n    sync: function() {\n      return Backbone.sync.apply(this, arguments);\n    },\n\n    // Get the value of an attribute.\n    get: function(attr) {\n      return this.attributes[attr];\n    },\n\n    // Get the HTML-escaped value of an attribute.\n    escape: function(attr) {\n      return _.escape(this.get(attr));\n    },\n\n    // Returns `true` if the attribute contains a value that is not null\n    // or undefined.\n    has: function(attr) {\n      return this.get(attr) != null;\n    },\n\n    // Set a hash of model attributes on the object, firing `\"change\"`. This is\n    // the core primitive operation of a model, updating the data and notifying\n    // anyone who needs to know about the change in state. The heart of the beast.\n    set: function(key, val, options) {\n      var attr, attrs, unset, changes, silent, changing, prev, current;\n      if (key == null) return this;\n\n      // Handle both `\"key\", value` and `{key: value}` -style arguments.\n      if (typeof key === 'object') {\n        attrs = key;\n        options = val;\n      } else {\n        (attrs = {})[key] = val;\n      }\n\n      options || (options = {});\n\n      // Run validation.\n      if (!this._validate(attrs, options)) return false;\n\n      // Extract attributes and options.\n      unset           = options.unset;\n      silent          = options.silent;\n      changes         = [];\n      changing        = this._changing;\n      this._changing  = true;\n\n      if (!changing) {\n        this._previousAttributes = _.clone(this.attributes);\n        this.changed = {};\n      }\n      current = this.attributes, prev = this._previousAttributes;\n\n      // Check for changes of `id`.\n      if (this.idAttribute in attrs) this.id = attrs[this.idAttribute];\n\n      // For each `set` attribute, update or delete the current value.\n      for (attr in attrs) {\n        val = attrs[attr];\n        if (!_.isEqual(current[attr], val)) changes.push(attr);\n        if (!_.isEqual(prev[attr], val)) {\n          this.changed[attr] = val;\n        } else {\n          delete this.changed[attr];\n        }\n        unset ? delete current[attr] : current[attr] = val;\n      }\n\n      // Trigger all relevant attribute changes.\n      if (!silent) {\n        if (changes.length) this._pending = options;\n        for (var i = 0, l = changes.length; i < l; i++) {\n          this.trigger('change:' + changes[i], this, current[changes[i]], options);\n        }\n      }\n\n      // You might be wondering why there's a `while` loop here. Changes can\n      // be recursively nested within `\"change\"` events.\n      if (changing) return this;\n      if (!silent) {\n        while (this._pending) {\n          options = this._pending;\n          this._pending = false;\n          this.trigger('change', this, options);\n        }\n      }\n      this._pending = false;\n      this._changing = false;\n      return this;\n    },\n\n    // Remove an attribute from the model, firing `\"change\"`. `unset` is a noop\n    // if the attribute doesn't exist.\n    unset: function(attr, options) {\n      return this.set(attr, void 0, _.extend({}, options, {unset: true}));\n    },\n\n    // Clear all attributes on the model, firing `\"change\"`.\n    clear: function(options) {\n      var attrs = {};\n      for (var key in this.attributes) attrs[key] = void 0;\n      return this.set(attrs, _.extend({}, options, {unset: true}));\n    },\n\n    // Determine if the model has changed since the last `\"change\"` event.\n    // If you specify an attribute name, determine if that attribute has changed.\n    hasChanged: function(attr) {\n      if (attr == null) return !_.isEmpty(this.changed);\n      return _.has(this.changed, attr);\n    },\n\n    // Return an object containing all the attributes that have changed, or\n    // false if there are no changed attributes. Useful for determining what\n    // parts of a view need to be updated and/or what attributes need to be\n    // persisted to the server. Unset attributes will be set to undefined.\n    // You can also pass an attributes object to diff against the model,\n    // determining if there *would be* a change.\n    changedAttributes: function(diff) {\n      if (!diff) return this.hasChanged() ? _.clone(this.changed) : false;\n      var val, changed = false;\n      var old = this._changing ? this._previousAttributes : this.attributes;\n      for (var attr in diff) {\n        if (_.isEqual(old[attr], (val = diff[attr]))) continue;\n        (changed || (changed = {}))[attr] = val;\n      }\n      return changed;\n    },\n\n    // Get the previous value of an attribute, recorded at the time the last\n    // `\"change\"` event was fired.\n    previous: function(attr) {\n      if (attr == null || !this._previousAttributes) return null;\n      return this._previousAttributes[attr];\n    },\n\n    // Get all of the attributes of the model at the time of the previous\n    // `\"change\"` event.\n    previousAttributes: function() {\n      return _.clone(this._previousAttributes);\n    },\n\n    // Fetch the model from the server. If the server's representation of the\n    // model differs from its current attributes, they will be overridden,\n    // triggering a `\"change\"` event.\n    fetch: function(options) {\n      options = options ? _.clone(options) : {};\n      if (options.parse === void 0) options.parse = true;\n      var model = this;\n      var success = options.success;\n      options.success = function(resp) {\n        if (!model.set(model.parse(resp, options), options)) return false;\n        if (success) success(model, resp, options);\n        model.trigger('sync', model, resp, options);\n      };\n      wrapError(this, options);\n      return this.sync('read', this, options);\n    },\n\n    // Set a hash of model attributes, and sync the model to the server.\n    // If the server returns an attributes hash that differs, the model's\n    // state will be `set` again.\n    save: function(key, val, options) {\n      var attrs, method, xhr, attributes = this.attributes;\n\n      // Handle both `\"key\", value` and `{key: value}` -style arguments.\n      if (key == null || typeof key === 'object') {\n        attrs = key;\n        options = val;\n      } else {\n        (attrs = {})[key] = val;\n      }\n\n      options = _.extend({validate: true}, options);\n\n      // If we're not waiting and attributes exist, save acts as\n      // `set(attr).save(null, opts)` with validation. Otherwise, check if\n      // the model will be valid when the attributes, if any, are set.\n      if (attrs && !options.wait) {\n        if (!this.set(attrs, options)) return false;\n      } else {\n        if (!this._validate(attrs, options)) return false;\n      }\n\n      // Set temporary attributes if `{wait: true}`.\n      if (attrs && options.wait) {\n        this.attributes = _.extend({}, attributes, attrs);\n      }\n\n      // After a successful server-side save, the client is (optionally)\n      // updated with the server-side state.\n      if (options.parse === void 0) options.parse = true;\n      var model = this;\n      var success = options.success;\n      options.success = function(resp) {\n        // Ensure attributes are restored during synchronous saves.\n        model.attributes = attributes;\n        var serverAttrs = model.parse(resp, options);\n        if (options.wait) serverAttrs = _.extend(attrs || {}, serverAttrs);\n        if (_.isObject(serverAttrs) && !model.set(serverAttrs, options)) {\n          return false;\n        }\n        if (success) success(model, resp, options);\n        model.trigger('sync', model, resp, options);\n      };\n      wrapError(this, options);\n\n      method = this.isNew() ? 'create' : (options.patch ? 'patch' : 'update');\n      if (method === 'patch') options.attrs = attrs;\n      xhr = this.sync(method, this, options);\n\n      // Restore attributes.\n      if (attrs && options.wait) this.attributes = attributes;\n\n      return xhr;\n    },\n\n    // Destroy this model on the server if it was already persisted.\n    // Optimistically removes the model from its collection, if it has one.\n    // If `wait: true` is passed, waits for the server to respond before removal.\n    destroy: function(options) {\n      options = options ? _.clone(options) : {};\n      var model = this;\n      var success = options.success;\n\n      var destroy = function() {\n        model.trigger('destroy', model, model.collection, options);\n      };\n\n      options.success = function(resp) {\n        if (options.wait || model.isNew()) destroy();\n        if (success) success(model, resp, options);\n        if (!model.isNew()) model.trigger('sync', model, resp, options);\n      };\n\n      if (this.isNew()) {\n        options.success();\n        return false;\n      }\n      wrapError(this, options);\n\n      var xhr = this.sync('delete', this, options);\n      if (!options.wait) destroy();\n      return xhr;\n    },\n\n    // Default URL for the model's representation on the server -- if you're\n    // using Backbone's restful methods, override this to change the endpoint\n    // that will be called.\n    url: function() {\n      var base =\n        _.result(this, 'urlRoot') ||\n        _.result(this.collection, 'url') ||\n        urlError();\n      if (this.isNew()) return base;\n      return base.replace(/([^\\/])$/, '$1/') + encodeURIComponent(this.id);\n    },\n\n    // **parse** converts a response into the hash of attributes to be `set` on\n    // the model. The default implementation is just to pass the response along.\n    parse: function(resp, options) {\n      return resp;\n    },\n\n    // Create a new model with identical attributes to this one.\n    clone: function() {\n      return new this.constructor(this.attributes);\n    },\n\n    // A model is new if it has never been saved to the server, and lacks an id.\n    isNew: function() {\n      return !this.has(this.idAttribute);\n    },\n\n    // Check if the model is currently in a valid state.\n    isValid: function(options) {\n      return this._validate({}, _.extend(options || {}, { validate: true }));\n    },\n\n    // Run validation against the next complete set of model attributes,\n    // returning `true` if all is well. Otherwise, fire an `\"invalid\"` event.\n    _validate: function(attrs, options) {\n      if (!options.validate || !this.validate) return true;\n      attrs = _.extend({}, this.attributes, attrs);\n      var error = this.validationError = this.validate(attrs, options) || null;\n      if (!error) return true;\n      this.trigger('invalid', this, error, _.extend(options, {validationError: error}));\n      return false;\n    }\n\n  });\n\n  // Underscore methods that we want to implement on the Model.\n  var modelMethods = ['keys', 'values', 'pairs', 'invert', 'pick', 'omit'];\n\n  // Mix in each Underscore method as a proxy to `Model#attributes`.\n  _.each(modelMethods, function(method) {\n    Model.prototype[method] = function() {\n      var args = slice.call(arguments);\n      args.unshift(this.attributes);\n      return _[method].apply(_, args);\n    };\n  });\n\n  // Backbone.Collection\n  // -------------------\n\n  // If models tend to represent a single row of data, a Backbone Collection is\n  // more analagous to a table full of data ... or a small slice or page of that\n  // table, or a collection of rows that belong together for a particular reason\n  // -- all of the messages in this particular folder, all of the documents\n  // belonging to this particular author, and so on. Collections maintain\n  // indexes of their models, both in order, and for lookup by `id`.\n\n  // Create a new **Collection**, perhaps to contain a specific type of `model`.\n  // If a `comparator` is specified, the Collection will maintain\n  // its models in sort order, as they're added and removed.\n  var Collection = Backbone.Collection = function(models, options) {\n    options || (options = {});\n    if (options.model) this.model = options.model;\n    if (options.comparator !== void 0) this.comparator = options.comparator;\n    this._reset();\n    this.initialize.apply(this, arguments);\n    if (models) this.reset(models, _.extend({silent: true}, options));\n  };\n\n  // Default options for `Collection#set`.\n  var setOptions = {add: true, remove: true, merge: true};\n  var addOptions = {add: true, remove: false};\n\n  // Define the Collection's inheritable methods.\n  _.extend(Collection.prototype, Events, {\n\n    // The default model for a collection is just a **Backbone.Model**.\n    // This should be overridden in most cases.\n    model: Model,\n\n    // Initialize is an empty function by default. Override it with your own\n    // initialization logic.\n    initialize: function(){},\n\n    // The JSON representation of a Collection is an array of the\n    // models' attributes.\n    toJSON: function(options) {\n      return this.map(function(model){ return model.toJSON(options); });\n    },\n\n    // Proxy `Backbone.sync` by default.\n    sync: function() {\n      return Backbone.sync.apply(this, arguments);\n    },\n\n    // Add a model, or list of models to the set.\n    add: function(models, options) {\n      return this.set(models, _.extend({merge: false}, options, addOptions));\n    },\n\n    // Remove a model, or a list of models from the set.\n    remove: function(models, options) {\n      var singular = !_.isArray(models);\n      models = singular ? [models] : _.clone(models);\n      options || (options = {});\n      var i, l, index, model;\n      for (i = 0, l = models.length; i < l; i++) {\n        model = models[i] = this.get(models[i]);\n        if (!model) continue;\n        delete this._byId[model.id];\n        delete this._byId[model.cid];\n        index = this.indexOf(model);\n        this.models.splice(index, 1);\n        this.length--;\n        if (!options.silent) {\n          options.index = index;\n          model.trigger('remove', model, this, options);\n        }\n        this._removeReference(model, options);\n      }\n      return singular ? models[0] : models;\n    },\n\n    // Update a collection by `set`-ing a new list of models, adding new ones,\n    // removing models that are no longer present, and merging models that\n    // already exist in the collection, as necessary. Similar to **Model#set**,\n    // the core operation for updating the data contained by the collection.\n    set: function(models, options) {\n      options = _.defaults({}, options, setOptions);\n      if (options.parse) models = this.parse(models, options);\n      var singular = !_.isArray(models);\n      models = singular ? (models ? [models] : []) : _.clone(models);\n      var i, l, id, model, attrs, existing, sort;\n      var at = options.at;\n      var targetModel = this.model;\n      var sortable = this.comparator && (at == null) && options.sort !== false;\n      var sortAttr = _.isString(this.comparator) ? this.comparator : null;\n      var toAdd = [], toRemove = [], modelMap = {};\n      var add = options.add, merge = options.merge, remove = options.remove;\n      var order = !sortable && add && remove ? [] : false;\n\n      // Turn bare objects into model references, and prevent invalid models\n      // from being added.\n      for (i = 0, l = models.length; i < l; i++) {\n        attrs = models[i] || {};\n        if (attrs instanceof Model) {\n          id = model = attrs;\n        } else {\n          id = attrs[targetModel.prototype.idAttribute || 'id'];\n        }\n\n        // If a duplicate is found, prevent it from being added and\n        // optionally merge it into the existing model.\n        if (existing = this.get(id)) {\n          if (remove) modelMap[existing.cid] = true;\n          if (merge) {\n            attrs = attrs === model ? model.attributes : attrs;\n            if (options.parse) attrs = existing.parse(attrs, options);\n            existing.set(attrs, options);\n            if (sortable && !sort && existing.hasChanged(sortAttr)) sort = true;\n          }\n          models[i] = existing;\n\n        // If this is a new, valid model, push it to the `toAdd` list.\n        } else if (add) {\n          model = models[i] = this._prepareModel(attrs, options);\n          if (!model) continue;\n          toAdd.push(model);\n          this._addReference(model, options);\n        }\n\n        // Do not add multiple models with the same `id`.\n        model = existing || model;\n        if (order && (model.isNew() || !modelMap[model.id])) order.push(model);\n        modelMap[model.id] = true;\n      }\n\n      // Remove nonexistent models if appropriate.\n      if (remove) {\n        for (i = 0, l = this.length; i < l; ++i) {\n          if (!modelMap[(model = this.models[i]).cid]) toRemove.push(model);\n        }\n        if (toRemove.length) this.remove(toRemove, options);\n      }\n\n      // See if sorting is needed, update `length` and splice in new models.\n      if (toAdd.length || (order && order.length)) {\n        if (sortable) sort = true;\n        this.length += toAdd.length;\n        if (at != null) {\n          for (i = 0, l = toAdd.length; i < l; i++) {\n            this.models.splice(at + i, 0, toAdd[i]);\n          }\n        } else {\n          if (order) this.models.length = 0;\n          var orderedModels = order || toAdd;\n          for (i = 0, l = orderedModels.length; i < l; i++) {\n            this.models.push(orderedModels[i]);\n          }\n        }\n      }\n\n      // Silently sort the collection if appropriate.\n      if (sort) this.sort({silent: true});\n\n      // Unless silenced, it's time to fire all appropriate add/sort events.\n      if (!options.silent) {\n        for (i = 0, l = toAdd.length; i < l; i++) {\n          (model = toAdd[i]).trigger('add', model, this, options);\n        }\n        if (sort || (order && order.length)) this.trigger('sort', this, options);\n      }\n\n      // Return the added (or merged) model (or models).\n      return singular ? models[0] : models;\n    },\n\n    // When you have more items than you want to add or remove individually,\n    // you can reset the entire set with a new list of models, without firing\n    // any granular `add` or `remove` events. Fires `reset` when finished.\n    // Useful for bulk operations and optimizations.\n    reset: function(models, options) {\n      options || (options = {});\n      for (var i = 0, l = this.models.length; i < l; i++) {\n        this._removeReference(this.models[i], options);\n      }\n      options.previousModels = this.models;\n      this._reset();\n      models = this.add(models, _.extend({silent: true}, options));\n      if (!options.silent) this.trigger('reset', this, options);\n      return models;\n    },\n\n    // Add a model to the end of the collection.\n    push: function(model, options) {\n      return this.add(model, _.extend({at: this.length}, options));\n    },\n\n    // Remove a model from the end of the collection.\n    pop: function(options) {\n      var model = this.at(this.length - 1);\n      this.remove(model, options);\n      return model;\n    },\n\n    // Add a model to the beginning of the collection.\n    unshift: function(model, options) {\n      return this.add(model, _.extend({at: 0}, options));\n    },\n\n    // Remove a model from the beginning of the collection.\n    shift: function(options) {\n      var model = this.at(0);\n      this.remove(model, options);\n      return model;\n    },\n\n    // Slice out a sub-array of models from the collection.\n    slice: function() {\n      return slice.apply(this.models, arguments);\n    },\n\n    // Get a model from the set by id.\n    get: function(obj) {\n      if (obj == null) return void 0;\n      return this._byId[obj] || this._byId[obj.id] || this._byId[obj.cid];\n    },\n\n    // Get the model at the given index.\n    at: function(index) {\n      return this.models[index];\n    },\n\n    // Return models with matching attributes. Useful for simple cases of\n    // `filter`.\n    where: function(attrs, first) {\n      if (_.isEmpty(attrs)) return first ? void 0 : [];\n      return this[first ? 'find' : 'filter'](function(model) {\n        for (var key in attrs) {\n          if (attrs[key] !== model.get(key)) return false;\n        }\n        return true;\n      });\n    },\n\n    // Return the first model with matching attributes. Useful for simple cases\n    // of `find`.\n    findWhere: function(attrs) {\n      return this.where(attrs, true);\n    },\n\n    // Force the collection to re-sort itself. You don't need to call this under\n    // normal circumstances, as the set will maintain sort order as each item\n    // is added.\n    sort: function(options) {\n      if (!this.comparator) throw new Error('Cannot sort a set without a comparator');\n      options || (options = {});\n\n      // Run sort based on type of `comparator`.\n      if (_.isString(this.comparator) || this.comparator.length === 1) {\n        this.models = this.sortBy(this.comparator, this);\n      } else {\n        this.models.sort(_.bind(this.comparator, this));\n      }\n\n      if (!options.silent) this.trigger('sort', this, options);\n      return this;\n    },\n\n    // Pluck an attribute from each model in the collection.\n    pluck: function(attr) {\n      return _.invoke(this.models, 'get', attr);\n    },\n\n    // Fetch the default set of models for this collection, resetting the\n    // collection when they arrive. If `reset: true` is passed, the response\n    // data will be passed through the `reset` method instead of `set`.\n    fetch: function(options) {\n      options = options ? _.clone(options) : {};\n      if (options.parse === void 0) options.parse = true;\n      var success = options.success;\n      var collection = this;\n      options.success = function(resp) {\n        var method = options.reset ? 'reset' : 'set';\n        collection[method](resp, options);\n        if (success) success(collection, resp, options);\n        collection.trigger('sync', collection, resp, options);\n      };\n      wrapError(this, options);\n      return this.sync('read', this, options);\n    },\n\n    // Create a new instance of a model in this collection. Add the model to the\n    // collection immediately, unless `wait: true` is passed, in which case we\n    // wait for the server to agree.\n    create: function(model, options) {\n      options = options ? _.clone(options) : {};\n      if (!(model = this._prepareModel(model, options))) return false;\n      if (!options.wait) this.add(model, options);\n      var collection = this;\n      var success = options.success;\n      options.success = function(model, resp) {\n        if (options.wait) collection.add(model, options);\n        if (success) success(model, resp, options);\n      };\n      model.save(null, options);\n      return model;\n    },\n\n    // **parse** converts a response into a list of models to be added to the\n    // collection. The default implementation is just to pass it through.\n    parse: function(resp, options) {\n      return resp;\n    },\n\n    // Create a new collection with an identical list of models as this one.\n    clone: function() {\n      return new this.constructor(this.models);\n    },\n\n    // Private method to reset all internal state. Called when the collection\n    // is first initialized or reset.\n    _reset: function() {\n      this.length = 0;\n      this.models = [];\n      this._byId  = {};\n    },\n\n    // Prepare a hash of attributes (or other model) to be added to this\n    // collection.\n    _prepareModel: function(attrs, options) {\n      if (attrs instanceof Model) return attrs;\n      options = options ? _.clone(options) : {};\n      options.collection = this;\n      var model = new this.model(attrs, options);\n      if (!model.validationError) return model;\n      this.trigger('invalid', this, model.validationError, options);\n      return false;\n    },\n\n    // Internal method to create a model's ties to a collection.\n    _addReference: function(model, options) {\n      this._byId[model.cid] = model;\n      if (model.id != null) this._byId[model.id] = model;\n      if (!model.collection) model.collection = this;\n      model.on('all', this._onModelEvent, this);\n    },\n\n    // Internal method to sever a model's ties to a collection.\n    _removeReference: function(model, options) {\n      if (this === model.collection) delete model.collection;\n      model.off('all', this._onModelEvent, this);\n    },\n\n    // Internal method called every time a model in the set fires an event.\n    // Sets need to update their indexes when models change ids. All other\n    // events simply proxy through. \"add\" and \"remove\" events that originate\n    // in other collections are ignored.\n    _onModelEvent: function(event, model, collection, options) {\n      if ((event === 'add' || event === 'remove') && collection !== this) return;\n      if (event === 'destroy') this.remove(model, options);\n      if (model && event === 'change:' + model.idAttribute) {\n        delete this._byId[model.previous(model.idAttribute)];\n        if (model.id != null) this._byId[model.id] = model;\n      }\n      this.trigger.apply(this, arguments);\n    }\n\n  });\n\n  // Underscore methods that we want to implement on the Collection.\n  // 90% of the core usefulness of Backbone Collections is actually implemented\n  // right here:\n  var methods = ['forEach', 'each', 'map', 'collect', 'reduce', 'foldl',\n    'inject', 'reduceRight', 'foldr', 'find', 'detect', 'filter', 'select',\n    'reject', 'every', 'all', 'some', 'any', 'include', 'contains', 'invoke',\n    'max', 'min', 'toArray', 'size', 'first', 'head', 'take', 'initial', 'rest',\n    'tail', 'drop', 'last', 'without', 'difference', 'indexOf', 'shuffle',\n    'lastIndexOf', 'isEmpty', 'chain', 'sample'];\n\n  // Mix in each Underscore method as a proxy to `Collection#models`.\n  _.each(methods, function(method) {\n    Collection.prototype[method] = function() {\n      var args = slice.call(arguments);\n      args.unshift(this.models);\n      return _[method].apply(_, args);\n    };\n  });\n\n  // Underscore methods that take a property name as an argument.\n  var attributeMethods = ['groupBy', 'countBy', 'sortBy', 'indexBy'];\n\n  // Use attributes instead of properties.\n  _.each(attributeMethods, function(method) {\n    Collection.prototype[method] = function(value, context) {\n      var iterator = _.isFunction(value) ? value : function(model) {\n        return model.get(value);\n      };\n      return _[method](this.models, iterator, context);\n    };\n  });\n\n  // Backbone.View\n  // -------------\n\n  // Backbone Views are almost more convention than they are actual code. A View\n  // is simply a JavaScript object that represents a logical chunk of UI in the\n  // DOM. This might be a single item, an entire list, a sidebar or panel, or\n  // even the surrounding frame which wraps your whole app. Defining a chunk of\n  // UI as a **View** allows you to define your DOM events declaratively, without\n  // having to worry about render order ... and makes it easy for the view to\n  // react to specific changes in the state of your models.\n\n  // Creating a Backbone.View creates its initial element outside of the DOM,\n  // if an existing element is not provided...\n  var View = Backbone.View = function(options) {\n    this.cid = _.uniqueId('view');\n    options || (options = {});\n    _.extend(this, _.pick(options, viewOptions));\n    this._ensureElement();\n    this.initialize.apply(this, arguments);\n    this.delegateEvents();\n  };\n\n  // Cached regex to split keys for `delegate`.\n  var delegateEventSplitter = /^(\\S+)\\s*(.*)$/;\n\n  // List of view options to be merged as properties.\n  var viewOptions = ['model', 'collection', 'el', 'id', 'attributes', 'className', 'tagName', 'events'];\n\n  // Set up all inheritable **Backbone.View** properties and methods.\n  _.extend(View.prototype, Events, {\n\n    // The default `tagName` of a View's element is `\"div\"`.\n    tagName: 'div',\n\n    // jQuery delegate for element lookup, scoped to DOM elements within the\n    // current view. This should be preferred to global lookups where possible.\n    $: function(selector) {\n      return this.$el.find(selector);\n    },\n\n    // Initialize is an empty function by default. Override it with your own\n    // initialization logic.\n    initialize: function(){},\n\n    // **render** is the core function that your view should override, in order\n    // to populate its element (`this.el`), with the appropriate HTML. The\n    // convention is for **render** to always return `this`.\n    render: function() {\n      return this;\n    },\n\n    // Remove this view by taking the element out of the DOM, and removing any\n    // applicable Backbone.Events listeners.\n    remove: function() {\n      this.$el.remove();\n      this.stopListening();\n      return this;\n    },\n\n    // Change the view's element (`this.el` property), including event\n    // re-delegation.\n    setElement: function(element, delegate) {\n      if (this.$el) this.undelegateEvents();\n      this.$el = element instanceof Backbone.$ ? element : Backbone.$(element);\n      this.el = this.$el[0];\n      if (delegate !== false) this.delegateEvents();\n      return this;\n    },\n\n    // Set callbacks, where `this.events` is a hash of\n    //\n    // *{\"event selector\": \"callback\"}*\n    //\n    //     {\n    //       'mousedown .title':  'edit',\n    //       'click .button':     'save',\n    //       'click .open':       function(e) { ... }\n    //     }\n    //\n    // pairs. Callbacks will be bound to the view, with `this` set properly.\n    // Uses event delegation for efficiency.\n    // Omitting the selector binds the event to `this.el`.\n    // This only works for delegate-able events: not `focus`, `blur`, and\n    // not `change`, `submit`, and `reset` in Internet Explorer.\n    delegateEvents: function(events) {\n      if (!(events || (events = _.result(this, 'events')))) return this;\n      this.undelegateEvents();\n      for (var key in events) {\n        var method = events[key];\n        if (!_.isFunction(method)) method = this[events[key]];\n        if (!method) continue;\n\n        var match = key.match(delegateEventSplitter);\n        var eventName = match[1], selector = match[2];\n        method = _.bind(method, this);\n        eventName += '.delegateEvents' + this.cid;\n        if (selector === '') {\n          this.$el.on(eventName, method);\n        } else {\n          this.$el.on(eventName, selector, method);\n        }\n      }\n      return this;\n    },\n\n    // Clears all callbacks previously bound to the view with `delegateEvents`.\n    // You usually don't need to use this, but may wish to if you have multiple\n    // Backbone views attached to the same DOM element.\n    undelegateEvents: function() {\n      this.$el.off('.delegateEvents' + this.cid);\n      return this;\n    },\n\n    // Ensure that the View has a DOM element to render into.\n    // If `this.el` is a string, pass it through `$()`, take the first\n    // matching element, and re-assign it to `el`. Otherwise, create\n    // an element from the `id`, `className` and `tagName` properties.\n    _ensureElement: function() {\n      if (!this.el) {\n        var attrs = _.extend({}, _.result(this, 'attributes'));\n        if (this.id) attrs.id = _.result(this, 'id');\n        if (this.className) attrs['class'] = _.result(this, 'className');\n        var $el = Backbone.$('<' + _.result(this, 'tagName') + '>').attr(attrs);\n        this.setElement($el, false);\n      } else {\n        this.setElement(_.result(this, 'el'), false);\n      }\n    }\n\n  });\n\n  // Backbone.sync\n  // -------------\n\n  // Override this function to change the manner in which Backbone persists\n  // models to the server. You will be passed the type of request, and the\n  // model in question. By default, makes a RESTful Ajax request\n  // to the model's `url()`. Some possible customizations could be:\n  //\n  // * Use `setTimeout` to batch rapid-fire updates into a single request.\n  // * Send up the models as XML instead of JSON.\n  // * Persist models via WebSockets instead of Ajax.\n  //\n  // Turn on `Backbone.emulateHTTP` in order to send `PUT` and `DELETE` requests\n  // as `POST`, with a `_method` parameter containing the true HTTP method,\n  // as well as all requests with the body as `application/x-www-form-urlencoded`\n  // instead of `application/json` with the model in a param named `model`.\n  // Useful when interfacing with server-side languages like **PHP** that make\n  // it difficult to read the body of `PUT` requests.\n  Backbone.sync = function(method, model, options) {\n    var type = methodMap[method];\n\n    // Default options, unless specified.\n    _.defaults(options || (options = {}), {\n      emulateHTTP: Backbone.emulateHTTP,\n      emulateJSON: Backbone.emulateJSON\n    });\n\n    // Default JSON-request options.\n    var params = {type: type, dataType: 'json'};\n\n    // Ensure that we have a URL.\n    if (!options.url) {\n      params.url = _.result(model, 'url') || urlError();\n    }\n\n    // Ensure that we have the appropriate request data.\n    if (options.data == null && model && (method === 'create' || method === 'update' || method === 'patch')) {\n      params.contentType = 'application/json';\n      params.data = JSON.stringify(options.attrs || model.toJSON(options));\n    }\n\n    // For older servers, emulate JSON by encoding the request into an HTML-form.\n    if (options.emulateJSON) {\n      params.contentType = 'application/x-www-form-urlencoded';\n      params.data = params.data ? {model: params.data} : {};\n    }\n\n    // For older servers, emulate HTTP by mimicking the HTTP method with `_method`\n    // And an `X-HTTP-Method-Override` header.\n    if (options.emulateHTTP && (type === 'PUT' || type === 'DELETE' || type === 'PATCH')) {\n      params.type = 'POST';\n      if (options.emulateJSON) params.data._method = type;\n      var beforeSend = options.beforeSend;\n      options.beforeSend = function(xhr) {\n        xhr.setRequestHeader('X-HTTP-Method-Override', type);\n        if (beforeSend) return beforeSend.apply(this, arguments);\n      };\n    }\n\n    // Don't process data on a non-GET request.\n    if (params.type !== 'GET' && !options.emulateJSON) {\n      params.processData = false;\n    }\n\n    // If we're sending a `PATCH` request, and we're in an old Internet Explorer\n    // that still has ActiveX enabled by default, override jQuery to use that\n    // for XHR instead. Remove this line when jQuery supports `PATCH` on IE8.\n    if (params.type === 'PATCH' && noXhrPatch) {\n      params.xhr = function() {\n        return new ActiveXObject(\"Microsoft.XMLHTTP\");\n      };\n    }\n\n    // Make the request, allowing the user to override any Ajax options.\n    var xhr = options.xhr = Backbone.ajax(_.extend(params, options));\n    model.trigger('request', model, xhr, options);\n    return xhr;\n  };\n\n  var noXhrPatch =\n    typeof window !== 'undefined' && !!window.ActiveXObject &&\n      !(window.XMLHttpRequest && (new XMLHttpRequest).dispatchEvent);\n\n  // Map from CRUD to HTTP for our default `Backbone.sync` implementation.\n  var methodMap = {\n    'create': 'POST',\n    'update': 'PUT',\n    'patch':  'PATCH',\n    'delete': 'DELETE',\n    'read':   'GET'\n  };\n\n  // Set the default implementation of `Backbone.ajax` to proxy through to `$`.\n  // Override this if you'd like to use a different library.\n  Backbone.ajax = function() {\n    return Backbone.$.ajax.apply(Backbone.$, arguments);\n  };\n\n  // Backbone.Router\n  // ---------------\n\n  // Routers map faux-URLs to actions, and fire events when routes are\n  // matched. Creating a new one sets its `routes` hash, if not set statically.\n  var Router = Backbone.Router = function(options) {\n    options || (options = {});\n    if (options.routes) this.routes = options.routes;\n    this._bindRoutes();\n    this.initialize.apply(this, arguments);\n  };\n\n  // Cached regular expressions for matching named param parts and splatted\n  // parts of route strings.\n  var optionalParam = /\\((.*?)\\)/g;\n  var namedParam    = /(\\(\\?)?:\\w+/g;\n  var splatParam    = /\\*\\w+/g;\n  var escapeRegExp  = /[\\-{}\\[\\]+?.,\\\\\\^$|#\\s]/g;\n\n  // Set up all inheritable **Backbone.Router** properties and methods.\n  _.extend(Router.prototype, Events, {\n\n    // Initialize is an empty function by default. Override it with your own\n    // initialization logic.\n    initialize: function(){},\n\n    // Manually bind a single named route to a callback. For example:\n    //\n    //     this.route('search/:query/p:num', 'search', function(query, num) {\n    //       ...\n    //     });\n    //\n    route: function(route, name, callback) {\n      if (!_.isRegExp(route)) route = this._routeToRegExp(route);\n      if (_.isFunction(name)) {\n        callback = name;\n        name = '';\n      }\n      if (!callback) callback = this[name];\n      var router = this;\n      Backbone.history.route(route, function(fragment) {\n        var args = router._extractParameters(route, fragment);\n        router.execute(callback, args);\n        router.trigger.apply(router, ['route:' + name].concat(args));\n        router.trigger('route', name, args);\n        Backbone.history.trigger('route', router, name, args);\n      });\n      return this;\n    },\n\n    // Execute a route handler with the provided parameters.  This is an\n    // excellent place to do pre-route setup or post-route cleanup.\n    execute: function(callback, args) {\n      if (callback) callback.apply(this, args);\n    },\n\n    // Simple proxy to `Backbone.history` to save a fragment into the history.\n    navigate: function(fragment, options) {\n      Backbone.history.navigate(fragment, options);\n      return this;\n    },\n\n    // Bind all defined routes to `Backbone.history`. We have to reverse the\n    // order of the routes here to support behavior where the most general\n    // routes can be defined at the bottom of the route map.\n    _bindRoutes: function() {\n      if (!this.routes) return;\n      this.routes = _.result(this, 'routes');\n      var route, routes = _.keys(this.routes);\n      while ((route = routes.pop()) != null) {\n        this.route(route, this.routes[route]);\n      }\n    },\n\n    // Convert a route string into a regular expression, suitable for matching\n    // against the current location hash.\n    _routeToRegExp: function(route) {\n      route = route.replace(escapeRegExp, '\\\\$&')\n                   .replace(optionalParam, '(?:$1)?')\n                   .replace(namedParam, function(match, optional) {\n                     return optional ? match : '([^/?]+)';\n                   })\n                   .replace(splatParam, '([^?]*?)');\n      return new RegExp('^' + route + '(?:\\\\?([\\\\s\\\\S]*))?$');\n    },\n\n    // Given a route, and a URL fragment that it matches, return the array of\n    // extracted decoded parameters. Empty or unmatched parameters will be\n    // treated as `null` to normalize cross-browser behavior.\n    _extractParameters: function(route, fragment) {\n      var params = route.exec(fragment).slice(1);\n      return _.map(params, function(param, i) {\n        // Don't decode the search params.\n        if (i === params.length - 1) return param || null;\n        return param ? decodeURIComponent(param) : null;\n      });\n    }\n\n  });\n\n  // Backbone.History\n  // ----------------\n\n  // Handles cross-browser history management, based on either\n  // [pushState](http://diveintohtml5.info/history.html) and real URLs, or\n  // [onhashchange](https://developer.mozilla.org/en-US/docs/DOM/window.onhashchange)\n  // and URL fragments. If the browser supports neither (old IE, natch),\n  // falls back to polling.\n  var History = Backbone.History = function() {\n    this.handlers = [];\n    _.bindAll(this, 'checkUrl');\n\n    // Ensure that `History` can be used outside of the browser.\n    if (typeof window !== 'undefined') {\n      this.location = window.location;\n      this.history = window.history;\n    }\n  };\n\n  // Cached regex for stripping a leading hash/slash and trailing space.\n  var routeStripper = /^[#\\/]|\\s+$/g;\n\n  // Cached regex for stripping leading and trailing slashes.\n  var rootStripper = /^\\/+|\\/+$/g;\n\n  // Cached regex for detecting MSIE.\n  var isExplorer = /msie [\\w.]+/;\n\n  // Cached regex for removing a trailing slash.\n  var trailingSlash = /\\/$/;\n\n  // Cached regex for stripping urls of hash.\n  var pathStripper = /#.*$/;\n\n  // Has the history handling already been started?\n  History.started = false;\n\n  // Set up all inheritable **Backbone.History** properties and methods.\n  _.extend(History.prototype, Events, {\n\n    // The default interval to poll for hash changes, if necessary, is\n    // twenty times a second.\n    interval: 50,\n\n    // Are we at the app root?\n    atRoot: function() {\n      return this.location.pathname.replace(/[^\\/]$/, '$&/') === this.root;\n    },\n\n    // Gets the true hash value. Cannot use location.hash directly due to bug\n    // in Firefox where location.hash will always be decoded.\n    getHash: function(window) {\n      var match = (window || this).location.href.match(/#(.*)$/);\n      return match ? match[1] : '';\n    },\n\n    // Get the cross-browser normalized URL fragment, either from the URL,\n    // the hash, or the override.\n    getFragment: function(fragment, forcePushState) {\n      if (fragment == null) {\n        if (this._hasPushState || !this._wantsHashChange || forcePushState) {\n          fragment = decodeURI(this.location.pathname + this.location.search);\n          var root = this.root.replace(trailingSlash, '');\n          if (!fragment.indexOf(root)) fragment = fragment.slice(root.length);\n        } else {\n          fragment = this.getHash();\n        }\n      }\n      return fragment.replace(routeStripper, '');\n    },\n\n    // Start the hash change handling, returning `true` if the current URL matches\n    // an existing route, and `false` otherwise.\n    start: function(options) {\n      if (History.started) throw new Error(\"Backbone.history has already been started\");\n      History.started = true;\n\n      // Figure out the initial configuration. Do we need an iframe?\n      // Is pushState desired ... is it available?\n      this.options          = _.extend({root: '/'}, this.options, options);\n      this.root             = this.options.root;\n      this._wantsHashChange = this.options.hashChange !== false;\n      this._wantsPushState  = !!this.options.pushState;\n      this._hasPushState    = !!(this.options.pushState && this.history && this.history.pushState);\n      var fragment          = this.getFragment();\n      var docMode           = document.documentMode;\n      var oldIE             = (isExplorer.exec(navigator.userAgent.toLowerCase()) && (!docMode || docMode <= 7));\n\n      // Normalize root to always include a leading and trailing slash.\n      this.root = ('/' + this.root + '/').replace(rootStripper, '/');\n\n      if (oldIE && this._wantsHashChange) {\n        var frame = Backbone.$('<iframe src=\"javascript:0\" tabindex=\"-1\">');\n        this.iframe = frame.hide().appendTo('body')[0].contentWindow;\n        this.navigate(fragment);\n      }\n\n      // Depending on whether we're using pushState or hashes, and whether\n      // 'onhashchange' is supported, determine how we check the URL state.\n      if (this._hasPushState) {\n        Backbone.$(window).on('popstate', this.checkUrl);\n      } else if (this._wantsHashChange && ('onhashchange' in window) && !oldIE) {\n        Backbone.$(window).on('hashchange', this.checkUrl);\n      } else if (this._wantsHashChange) {\n        this._checkUrlInterval = setInterval(this.checkUrl, this.interval);\n      }\n\n      // Determine if we need to change the base url, for a pushState link\n      // opened by a non-pushState browser.\n      this.fragment = fragment;\n      var loc = this.location;\n\n      // Transition from hashChange to pushState or vice versa if both are\n      // requested.\n      if (this._wantsHashChange && this._wantsPushState) {\n\n        // If we've started off with a route from a `pushState`-enabled\n        // browser, but we're currently in a browser that doesn't support it...\n        if (!this._hasPushState && !this.atRoot()) {\n          this.fragment = this.getFragment(null, true);\n          this.location.replace(this.root + '#' + this.fragment);\n          // Return immediately as browser will do redirect to new url\n          return true;\n\n        // Or if we've started out with a hash-based route, but we're currently\n        // in a browser where it could be `pushState`-based instead...\n        } else if (this._hasPushState && this.atRoot() && loc.hash) {\n          this.fragment = this.getHash().replace(routeStripper, '');\n          this.history.replaceState({}, document.title, this.root + this.fragment);\n        }\n\n      }\n\n      if (!this.options.silent) return this.loadUrl();\n    },\n\n    // Disable Backbone.history, perhaps temporarily. Not useful in a real app,\n    // but possibly useful for unit testing Routers.\n    stop: function() {\n      Backbone.$(window).off('popstate', this.checkUrl).off('hashchange', this.checkUrl);\n      if (this._checkUrlInterval) clearInterval(this._checkUrlInterval);\n      History.started = false;\n    },\n\n    // Add a route to be tested when the fragment changes. Routes added later\n    // may override previous routes.\n    route: function(route, callback) {\n      this.handlers.unshift({route: route, callback: callback});\n    },\n\n    // Checks the current URL to see if it has changed, and if it has,\n    // calls `loadUrl`, normalizing across the hidden iframe.\n    checkUrl: function(e) {\n      var current = this.getFragment();\n      if (current === this.fragment && this.iframe) {\n        current = this.getFragment(this.getHash(this.iframe));\n      }\n      if (current === this.fragment) return false;\n      if (this.iframe) this.navigate(current);\n      this.loadUrl();\n    },\n\n    // Attempt to load the current URL fragment. If a route succeeds with a\n    // match, returns `true`. If no defined routes matches the fragment,\n    // returns `false`.\n    loadUrl: function(fragment) {\n      fragment = this.fragment = this.getFragment(fragment);\n      return _.any(this.handlers, function(handler) {\n        if (handler.route.test(fragment)) {\n          handler.callback(fragment);\n          return true;\n        }\n      });\n    },\n\n    // Save a fragment into the hash history, or replace the URL state if the\n    // 'replace' option is passed. You are responsible for properly URL-encoding\n    // the fragment in advance.\n    //\n    // The options object can contain `trigger: true` if you wish to have the\n    // route callback be fired (not usually desirable), or `replace: true`, if\n    // you wish to modify the current URL without adding an entry to the history.\n    navigate: function(fragment, options) {\n      if (!History.started) return false;\n      if (!options || options === true) options = {trigger: !!options};\n\n      var url = this.root + (fragment = this.getFragment(fragment || ''));\n\n      // Strip the hash for matching.\n      fragment = fragment.replace(pathStripper, '');\n\n      if (this.fragment === fragment) return;\n      this.fragment = fragment;\n\n      // Don't include a trailing slash on the root.\n      if (fragment === '' && url !== '/') url = url.slice(0, -1);\n\n      // If pushState is available, we use it to set the fragment as a real URL.\n      if (this._hasPushState) {\n        this.history[options.replace ? 'replaceState' : 'pushState']({}, document.title, url);\n\n      // If hash changes haven't been explicitly disabled, update the hash\n      // fragment to store history.\n      } else if (this._wantsHashChange) {\n        this._updateHash(this.location, fragment, options.replace);\n        if (this.iframe && (fragment !== this.getFragment(this.getHash(this.iframe)))) {\n          // Opening and closing the iframe tricks IE7 and earlier to push a\n          // history entry on hash-tag change.  When replace is true, we don't\n          // want this.\n          if(!options.replace) this.iframe.document.open().close();\n          this._updateHash(this.iframe.location, fragment, options.replace);\n        }\n\n      // If you've told us that you explicitly don't want fallback hashchange-\n      // based history, then `navigate` becomes a page refresh.\n      } else {\n        return this.location.assign(url);\n      }\n      if (options.trigger) return this.loadUrl(fragment);\n    },\n\n    // Update the hash location, either replacing the current entry, or adding\n    // a new one to the browser history.\n    _updateHash: function(location, fragment, replace) {\n      if (replace) {\n        var href = location.href.replace(/(javascript:|#).*$/, '');\n        location.replace(href + '#' + fragment);\n      } else {\n        // Some browsers require that `hash` contains a leading #.\n        location.hash = '#' + fragment;\n      }\n    }\n\n  });\n\n  // Create the default Backbone.history.\n  Backbone.history = new History;\n\n  // Helpers\n  // -------\n\n  // Helper function to correctly set up the prototype chain, for subclasses.\n  // Similar to `goog.inherits`, but uses a hash of prototype properties and\n  // class properties to be extended.\n  var extend = function(protoProps, staticProps) {\n    var parent = this;\n    var child;\n\n    // The constructor function for the new subclass is either defined by you\n    // (the \"constructor\" property in your `extend` definition), or defaulted\n    // by us to simply call the parent's constructor.\n    if (protoProps && _.has(protoProps, 'constructor')) {\n      child = protoProps.constructor;\n    } else {\n      child = function(){ return parent.apply(this, arguments); };\n    }\n\n    // Add static properties to the constructor function, if supplied.\n    _.extend(child, parent, staticProps);\n\n    // Set the prototype chain to inherit from `parent`, without calling\n    // `parent`'s constructor function.\n    var Surrogate = function(){ this.constructor = child; };\n    Surrogate.prototype = parent.prototype;\n    child.prototype = new Surrogate;\n\n    // Add prototype properties (instance properties) to the subclass,\n    // if supplied.\n    if (protoProps) _.extend(child.prototype, protoProps);\n\n    // Set a convenience property in case the parent's prototype is needed\n    // later.\n    child.__super__ = parent.prototype;\n\n    return child;\n  };\n\n  // Set up inheritance for the model, collection, router, view and history.\n  Model.extend = Collection.extend = Router.extend = View.extend = History.extend = extend;\n\n  // Throw an error when a URL is needed, and none is supplied.\n  var urlError = function() {\n    throw new Error('A \"url\" property or function must be specified');\n  };\n\n  // Wrap an optional error callback with a fallback error event.\n  var wrapError = function(model, options) {\n    var error = options.error;\n    options.error = function(resp) {\n      if (error) error(model, resp, options);\n      model.trigger('error', model, resp, options);\n    };\n  };\n\n  return Backbone;\n\n}));\n","//     Underscore.js 1.8.2\n//     http://underscorejs.org\n//     (c) 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n//     Underscore may be freely distributed under the MIT license.\n\n(function() {\n\n  // Baseline setup\n  // --------------\n\n  // Establish the root object, `window` in the browser, or `exports` on the server.\n  var root = this;\n\n  // Save the previous value of the `_` variable.\n  var previousUnderscore = root._;\n\n  // Save bytes in the minified (but not gzipped) version:\n  var ArrayProto = Array.prototype, ObjProto = Object.prototype, FuncProto = Function.prototype;\n\n  // Create quick reference variables for speed access to core prototypes.\n  var\n    push             = ArrayProto.push,\n    slice            = ArrayProto.slice,\n    toString         = ObjProto.toString,\n    hasOwnProperty   = ObjProto.hasOwnProperty;\n\n  // All **ECMAScript 5** native function implementations that we hope to use\n  // are declared here.\n  var\n    nativeIsArray      = Array.isArray,\n    nativeKeys         = Object.keys,\n    nativeBind         = FuncProto.bind,\n    nativeCreate       = Object.create;\n\n  // Naked function reference for surrogate-prototype-swapping.\n  var Ctor = function(){};\n\n  // Create a safe reference to the Underscore object for use below.\n  var _ = function(obj) {\n    if (obj instanceof _) return obj;\n    if (!(this instanceof _)) return new _(obj);\n    this._wrapped = obj;\n  };\n\n  // Export the Underscore object for **Node.js**, with\n  // backwards-compatibility for the old `require()` API. If we're in\n  // the browser, add `_` as a global object.\n  if (typeof exports !== 'undefined') {\n    if (typeof module !== 'undefined' && module.exports) {\n      exports = module.exports = _;\n    }\n    exports._ = _;\n  } else {\n    root._ = _;\n  }\n\n  // Current version.\n  _.VERSION = '1.8.2';\n\n  // Internal function that returns an efficient (for current engines) version\n  // of the passed-in callback, to be repeatedly applied in other Underscore\n  // functions.\n  var optimizeCb = function(func, context, argCount) {\n    if (context === void 0) return func;\n    switch (argCount == null ? 3 : argCount) {\n      case 1: return function(value) {\n        return func.call(context, value);\n      };\n      case 2: return function(value, other) {\n        return func.call(context, value, other);\n      };\n      case 3: return function(value, index, collection) {\n        return func.call(context, value, index, collection);\n      };\n      case 4: return function(accumulator, value, index, collection) {\n        return func.call(context, accumulator, value, index, collection);\n      };\n    }\n    return function() {\n      return func.apply(context, arguments);\n    };\n  };\n\n  // A mostly-internal function to generate callbacks that can be applied\n  // to each element in a collection, returning the desired result — either\n  // identity, an arbitrary callback, a property matcher, or a property accessor.\n  var cb = function(value, context, argCount) {\n    if (value == null) return _.identity;\n    if (_.isFunction(value)) return optimizeCb(value, context, argCount);\n    if (_.isObject(value)) return _.matcher(value);\n    return _.property(value);\n  };\n  _.iteratee = function(value, context) {\n    return cb(value, context, Infinity);\n  };\n\n  // An internal function for creating assigner functions.\n  var createAssigner = function(keysFunc, undefinedOnly) {\n    return function(obj) {\n      var length = arguments.length;\n      if (length < 2 || obj == null) return obj;\n      for (var index = 1; index < length; index++) {\n        var source = arguments[index],\n            keys = keysFunc(source),\n            l = keys.length;\n        for (var i = 0; i < l; i++) {\n          var key = keys[i];\n          if (!undefinedOnly || obj[key] === void 0) obj[key] = source[key];\n        }\n      }\n      return obj;\n    };\n  };\n\n  // An internal function for creating a new object that inherits from another.\n  var baseCreate = function(prototype) {\n    if (!_.isObject(prototype)) return {};\n    if (nativeCreate) return nativeCreate(prototype);\n    Ctor.prototype = prototype;\n    var result = new Ctor;\n    Ctor.prototype = null;\n    return result;\n  };\n\n  // Helper for collection methods to determine whether a collection\n  // should be iterated as an array or as an object\n  // Related: http://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength\n  var MAX_ARRAY_INDEX = Math.pow(2, 53) - 1;\n  var isArrayLike = function(collection) {\n    var length = collection && collection.length;\n    return typeof length == 'number' && length >= 0 && length <= MAX_ARRAY_INDEX;\n  };\n\n  // Collection Functions\n  // --------------------\n\n  // The cornerstone, an `each` implementation, aka `forEach`.\n  // Handles raw objects in addition to array-likes. Treats all\n  // sparse array-likes as if they were dense.\n  _.each = _.forEach = function(obj, iteratee, context) {\n    iteratee = optimizeCb(iteratee, context);\n    var i, length;\n    if (isArrayLike(obj)) {\n      for (i = 0, length = obj.length; i < length; i++) {\n        iteratee(obj[i], i, obj);\n      }\n    } else {\n      var keys = _.keys(obj);\n      for (i = 0, length = keys.length; i < length; i++) {\n        iteratee(obj[keys[i]], keys[i], obj);\n      }\n    }\n    return obj;\n  };\n\n  // Return the results of applying the iteratee to each element.\n  _.map = _.collect = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length,\n        results = Array(length);\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      results[index] = iteratee(obj[currentKey], currentKey, obj);\n    }\n    return results;\n  };\n\n  // Create a reducing function iterating left or right.\n  function createReduce(dir) {\n    // Optimized iterator function as using arguments.length\n    // in the main function will deoptimize the, see #1991.\n    function iterator(obj, iteratee, memo, keys, index, length) {\n      for (; index >= 0 && index < length; index += dir) {\n        var currentKey = keys ? keys[index] : index;\n        memo = iteratee(memo, obj[currentKey], currentKey, obj);\n      }\n      return memo;\n    }\n\n    return function(obj, iteratee, memo, context) {\n      iteratee = optimizeCb(iteratee, context, 4);\n      var keys = !isArrayLike(obj) && _.keys(obj),\n          length = (keys || obj).length,\n          index = dir > 0 ? 0 : length - 1;\n      // Determine the initial value if none is provided.\n      if (arguments.length < 3) {\n        memo = obj[keys ? keys[index] : index];\n        index += dir;\n      }\n      return iterator(obj, iteratee, memo, keys, index, length);\n    };\n  }\n\n  // **Reduce** builds up a single result from a list of values, aka `inject`,\n  // or `foldl`.\n  _.reduce = _.foldl = _.inject = createReduce(1);\n\n  // The right-associative version of reduce, also known as `foldr`.\n  _.reduceRight = _.foldr = createReduce(-1);\n\n  // Return the first value which passes a truth test. Aliased as `detect`.\n  _.find = _.detect = function(obj, predicate, context) {\n    var key;\n    if (isArrayLike(obj)) {\n      key = _.findIndex(obj, predicate, context);\n    } else {\n      key = _.findKey(obj, predicate, context);\n    }\n    if (key !== void 0 && key !== -1) return obj[key];\n  };\n\n  // Return all the elements that pass a truth test.\n  // Aliased as `select`.\n  _.filter = _.select = function(obj, predicate, context) {\n    var results = [];\n    predicate = cb(predicate, context);\n    _.each(obj, function(value, index, list) {\n      if (predicate(value, index, list)) results.push(value);\n    });\n    return results;\n  };\n\n  // Return all the elements for which a truth test fails.\n  _.reject = function(obj, predicate, context) {\n    return _.filter(obj, _.negate(cb(predicate)), context);\n  };\n\n  // Determine whether all of the elements match a truth test.\n  // Aliased as `all`.\n  _.every = _.all = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length;\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      if (!predicate(obj[currentKey], currentKey, obj)) return false;\n    }\n    return true;\n  };\n\n  // Determine if at least one element in the object matches a truth test.\n  // Aliased as `any`.\n  _.some = _.any = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length;\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      if (predicate(obj[currentKey], currentKey, obj)) return true;\n    }\n    return false;\n  };\n\n  // Determine if the array or object contains a given value (using `===`).\n  // Aliased as `includes` and `include`.\n  _.contains = _.includes = _.include = function(obj, target, fromIndex) {\n    if (!isArrayLike(obj)) obj = _.values(obj);\n    return _.indexOf(obj, target, typeof fromIndex == 'number' && fromIndex) >= 0;\n  };\n\n  // Invoke a method (with arguments) on every item in a collection.\n  _.invoke = function(obj, method) {\n    var args = slice.call(arguments, 2);\n    var isFunc = _.isFunction(method);\n    return _.map(obj, function(value) {\n      var func = isFunc ? method : value[method];\n      return func == null ? func : func.apply(value, args);\n    });\n  };\n\n  // Convenience version of a common use case of `map`: fetching a property.\n  _.pluck = function(obj, key) {\n    return _.map(obj, _.property(key));\n  };\n\n  // Convenience version of a common use case of `filter`: selecting only objects\n  // containing specific `key:value` pairs.\n  _.where = function(obj, attrs) {\n    return _.filter(obj, _.matcher(attrs));\n  };\n\n  // Convenience version of a common use case of `find`: getting the first object\n  // containing specific `key:value` pairs.\n  _.findWhere = function(obj, attrs) {\n    return _.find(obj, _.matcher(attrs));\n  };\n\n  // Return the maximum element (or element-based computation).\n  _.max = function(obj, iteratee, context) {\n    var result = -Infinity, lastComputed = -Infinity,\n        value, computed;\n    if (iteratee == null && obj != null) {\n      obj = isArrayLike(obj) ? obj : _.values(obj);\n      for (var i = 0, length = obj.length; i < length; i++) {\n        value = obj[i];\n        if (value > result) {\n          result = value;\n        }\n      }\n    } else {\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index, list) {\n        computed = iteratee(value, index, list);\n        if (computed > lastComputed || computed === -Infinity && result === -Infinity) {\n          result = value;\n          lastComputed = computed;\n        }\n      });\n    }\n    return result;\n  };\n\n  // Return the minimum element (or element-based computation).\n  _.min = function(obj, iteratee, context) {\n    var result = Infinity, lastComputed = Infinity,\n        value, computed;\n    if (iteratee == null && obj != null) {\n      obj = isArrayLike(obj) ? obj : _.values(obj);\n      for (var i = 0, length = obj.length; i < length; i++) {\n        value = obj[i];\n        if (value < result) {\n          result = value;\n        }\n      }\n    } else {\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index, list) {\n        computed = iteratee(value, index, list);\n        if (computed < lastComputed || computed === Infinity && result === Infinity) {\n          result = value;\n          lastComputed = computed;\n        }\n      });\n    }\n    return result;\n  };\n\n  // Shuffle a collection, using the modern version of the\n  // [Fisher-Yates shuffle](http://en.wikipedia.org/wiki/Fisher–Yates_shuffle).\n  _.shuffle = function(obj) {\n    var set = isArrayLike(obj) ? obj : _.values(obj);\n    var length = set.length;\n    var shuffled = Array(length);\n    for (var index = 0, rand; index < length; index++) {\n      rand = _.random(0, index);\n      if (rand !== index) shuffled[index] = shuffled[rand];\n      shuffled[rand] = set[index];\n    }\n    return shuffled;\n  };\n\n  // Sample **n** random values from a collection.\n  // If **n** is not specified, returns a single random element.\n  // The internal `guard` argument allows it to work with `map`.\n  _.sample = function(obj, n, guard) {\n    if (n == null || guard) {\n      if (!isArrayLike(obj)) obj = _.values(obj);\n      return obj[_.random(obj.length - 1)];\n    }\n    return _.shuffle(obj).slice(0, Math.max(0, n));\n  };\n\n  // Sort the object's values by a criterion produced by an iteratee.\n  _.sortBy = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    return _.pluck(_.map(obj, function(value, index, list) {\n      return {\n        value: value,\n        index: index,\n        criteria: iteratee(value, index, list)\n      };\n    }).sort(function(left, right) {\n      var a = left.criteria;\n      var b = right.criteria;\n      if (a !== b) {\n        if (a > b || a === void 0) return 1;\n        if (a < b || b === void 0) return -1;\n      }\n      return left.index - right.index;\n    }), 'value');\n  };\n\n  // An internal function used for aggregate \"group by\" operations.\n  var group = function(behavior) {\n    return function(obj, iteratee, context) {\n      var result = {};\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index) {\n        var key = iteratee(value, index, obj);\n        behavior(result, value, key);\n      });\n      return result;\n    };\n  };\n\n  // Groups the object's values by a criterion. Pass either a string attribute\n  // to group by, or a function that returns the criterion.\n  _.groupBy = group(function(result, value, key) {\n    if (_.has(result, key)) result[key].push(value); else result[key] = [value];\n  });\n\n  // Indexes the object's values by a criterion, similar to `groupBy`, but for\n  // when you know that your index values will be unique.\n  _.indexBy = group(function(result, value, key) {\n    result[key] = value;\n  });\n\n  // Counts instances of an object that group by a certain criterion. Pass\n  // either a string attribute to count by, or a function that returns the\n  // criterion.\n  _.countBy = group(function(result, value, key) {\n    if (_.has(result, key)) result[key]++; else result[key] = 1;\n  });\n\n  // Safely create a real, live array from anything iterable.\n  _.toArray = function(obj) {\n    if (!obj) return [];\n    if (_.isArray(obj)) return slice.call(obj);\n    if (isArrayLike(obj)) return _.map(obj, _.identity);\n    return _.values(obj);\n  };\n\n  // Return the number of elements in an object.\n  _.size = function(obj) {\n    if (obj == null) return 0;\n    return isArrayLike(obj) ? obj.length : _.keys(obj).length;\n  };\n\n  // Split a collection into two arrays: one whose elements all satisfy the given\n  // predicate, and one whose elements all do not satisfy the predicate.\n  _.partition = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var pass = [], fail = [];\n    _.each(obj, function(value, key, obj) {\n      (predicate(value, key, obj) ? pass : fail).push(value);\n    });\n    return [pass, fail];\n  };\n\n  // Array Functions\n  // ---------------\n\n  // Get the first element of an array. Passing **n** will return the first N\n  // values in the array. Aliased as `head` and `take`. The **guard** check\n  // allows it to work with `_.map`.\n  _.first = _.head = _.take = function(array, n, guard) {\n    if (array == null) return void 0;\n    if (n == null || guard) return array[0];\n    return _.initial(array, array.length - n);\n  };\n\n  // Returns everything but the last entry of the array. Especially useful on\n  // the arguments object. Passing **n** will return all the values in\n  // the array, excluding the last N.\n  _.initial = function(array, n, guard) {\n    return slice.call(array, 0, Math.max(0, array.length - (n == null || guard ? 1 : n)));\n  };\n\n  // Get the last element of an array. Passing **n** will return the last N\n  // values in the array.\n  _.last = function(array, n, guard) {\n    if (array == null) return void 0;\n    if (n == null || guard) return array[array.length - 1];\n    return _.rest(array, Math.max(0, array.length - n));\n  };\n\n  // Returns everything but the first entry of the array. Aliased as `tail` and `drop`.\n  // Especially useful on the arguments object. Passing an **n** will return\n  // the rest N values in the array.\n  _.rest = _.tail = _.drop = function(array, n, guard) {\n    return slice.call(array, n == null || guard ? 1 : n);\n  };\n\n  // Trim out all falsy values from an array.\n  _.compact = function(array) {\n    return _.filter(array, _.identity);\n  };\n\n  // Internal implementation of a recursive `flatten` function.\n  var flatten = function(input, shallow, strict, startIndex) {\n    var output = [], idx = 0;\n    for (var i = startIndex || 0, length = input && input.length; i < length; i++) {\n      var value = input[i];\n      if (isArrayLike(value) && (_.isArray(value) || _.isArguments(value))) {\n        //flatten current level of array or arguments object\n        if (!shallow) value = flatten(value, shallow, strict);\n        var j = 0, len = value.length;\n        output.length += len;\n        while (j < len) {\n          output[idx++] = value[j++];\n        }\n      } else if (!strict) {\n        output[idx++] = value;\n      }\n    }\n    return output;\n  };\n\n  // Flatten out an array, either recursively (by default), or just one level.\n  _.flatten = function(array, shallow) {\n    return flatten(array, shallow, false);\n  };\n\n  // Return a version of the array that does not contain the specified value(s).\n  _.without = function(array) {\n    return _.difference(array, slice.call(arguments, 1));\n  };\n\n  // Produce a duplicate-free version of the array. If the array has already\n  // been sorted, you have the option of using a faster algorithm.\n  // Aliased as `unique`.\n  _.uniq = _.unique = function(array, isSorted, iteratee, context) {\n    if (array == null) return [];\n    if (!_.isBoolean(isSorted)) {\n      context = iteratee;\n      iteratee = isSorted;\n      isSorted = false;\n    }\n    if (iteratee != null) iteratee = cb(iteratee, context);\n    var result = [];\n    var seen = [];\n    for (var i = 0, length = array.length; i < length; i++) {\n      var value = array[i],\n          computed = iteratee ? iteratee(value, i, array) : value;\n      if (isSorted) {\n        if (!i || seen !== computed) result.push(value);\n        seen = computed;\n      } else if (iteratee) {\n        if (!_.contains(seen, computed)) {\n          seen.push(computed);\n          result.push(value);\n        }\n      } else if (!_.contains(result, value)) {\n        result.push(value);\n      }\n    }\n    return result;\n  };\n\n  // Produce an array that contains the union: each distinct element from all of\n  // the passed-in arrays.\n  _.union = function() {\n    return _.uniq(flatten(arguments, true, true));\n  };\n\n  // Produce an array that contains every item shared between all the\n  // passed-in arrays.\n  _.intersection = function(array) {\n    if (array == null) return [];\n    var result = [];\n    var argsLength = arguments.length;\n    for (var i = 0, length = array.length; i < length; i++) {\n      var item = array[i];\n      if (_.contains(result, item)) continue;\n      for (var j = 1; j < argsLength; j++) {\n        if (!_.contains(arguments[j], item)) break;\n      }\n      if (j === argsLength) result.push(item);\n    }\n    return result;\n  };\n\n  // Take the difference between one array and a number of other arrays.\n  // Only the elements present in just the first array will remain.\n  _.difference = function(array) {\n    var rest = flatten(arguments, true, true, 1);\n    return _.filter(array, function(value){\n      return !_.contains(rest, value);\n    });\n  };\n\n  // Zip together multiple lists into a single array -- elements that share\n  // an index go together.\n  _.zip = function() {\n    return _.unzip(arguments);\n  };\n\n  // Complement of _.zip. Unzip accepts an array of arrays and groups\n  // each array's elements on shared indices\n  _.unzip = function(array) {\n    var length = array && _.max(array, 'length').length || 0;\n    var result = Array(length);\n\n    for (var index = 0; index < length; index++) {\n      result[index] = _.pluck(array, index);\n    }\n    return result;\n  };\n\n  // Converts lists into objects. Pass either a single array of `[key, value]`\n  // pairs, or two parallel arrays of the same length -- one of keys, and one of\n  // the corresponding values.\n  _.object = function(list, values) {\n    var result = {};\n    for (var i = 0, length = list && list.length; i < length; i++) {\n      if (values) {\n        result[list[i]] = values[i];\n      } else {\n        result[list[i][0]] = list[i][1];\n      }\n    }\n    return result;\n  };\n\n  // Return the position of the first occurrence of an item in an array,\n  // or -1 if the item is not included in the array.\n  // If the array is large and already in sort order, pass `true`\n  // for **isSorted** to use binary search.\n  _.indexOf = function(array, item, isSorted) {\n    var i = 0, length = array && array.length;\n    if (typeof isSorted == 'number') {\n      i = isSorted < 0 ? Math.max(0, length + isSorted) : isSorted;\n    } else if (isSorted && length) {\n      i = _.sortedIndex(array, item);\n      return array[i] === item ? i : -1;\n    }\n    if (item !== item) {\n      return _.findIndex(slice.call(array, i), _.isNaN);\n    }\n    for (; i < length; i++) if (array[i] === item) return i;\n    return -1;\n  };\n\n  _.lastIndexOf = function(array, item, from) {\n    var idx = array ? array.length : 0;\n    if (typeof from == 'number') {\n      idx = from < 0 ? idx + from + 1 : Math.min(idx, from + 1);\n    }\n    if (item !== item) {\n      return _.findLastIndex(slice.call(array, 0, idx), _.isNaN);\n    }\n    while (--idx >= 0) if (array[idx] === item) return idx;\n    return -1;\n  };\n\n  // Generator function to create the findIndex and findLastIndex functions\n  function createIndexFinder(dir) {\n    return function(array, predicate, context) {\n      predicate = cb(predicate, context);\n      var length = array != null && array.length;\n      var index = dir > 0 ? 0 : length - 1;\n      for (; index >= 0 && index < length; index += dir) {\n        if (predicate(array[index], index, array)) return index;\n      }\n      return -1;\n    };\n  }\n\n  // Returns the first index on an array-like that passes a predicate test\n  _.findIndex = createIndexFinder(1);\n\n  _.findLastIndex = createIndexFinder(-1);\n\n  // Use a comparator function to figure out the smallest index at which\n  // an object should be inserted so as to maintain order. Uses binary search.\n  _.sortedIndex = function(array, obj, iteratee, context) {\n    iteratee = cb(iteratee, context, 1);\n    var value = iteratee(obj);\n    var low = 0, high = array.length;\n    while (low < high) {\n      var mid = Math.floor((low + high) / 2);\n      if (iteratee(array[mid]) < value) low = mid + 1; else high = mid;\n    }\n    return low;\n  };\n\n  // Generate an integer Array containing an arithmetic progression. A port of\n  // the native Python `range()` function. See\n  // [the Python documentation](http://docs.python.org/library/functions.html#range).\n  _.range = function(start, stop, step) {\n    if (arguments.length <= 1) {\n      stop = start || 0;\n      start = 0;\n    }\n    step = step || 1;\n\n    var length = Math.max(Math.ceil((stop - start) / step), 0);\n    var range = Array(length);\n\n    for (var idx = 0; idx < length; idx++, start += step) {\n      range[idx] = start;\n    }\n\n    return range;\n  };\n\n  // Function (ahem) Functions\n  // ------------------\n\n  // Determines whether to execute a function as a constructor\n  // or a normal function with the provided arguments\n  var executeBound = function(sourceFunc, boundFunc, context, callingContext, args) {\n    if (!(callingContext instanceof boundFunc)) return sourceFunc.apply(context, args);\n    var self = baseCreate(sourceFunc.prototype);\n    var result = sourceFunc.apply(self, args);\n    if (_.isObject(result)) return result;\n    return self;\n  };\n\n  // Create a function bound to a given object (assigning `this`, and arguments,\n  // optionally). Delegates to **ECMAScript 5**'s native `Function.bind` if\n  // available.\n  _.bind = function(func, context) {\n    if (nativeBind && func.bind === nativeBind) return nativeBind.apply(func, slice.call(arguments, 1));\n    if (!_.isFunction(func)) throw new TypeError('Bind must be called on a function');\n    var args = slice.call(arguments, 2);\n    var bound = function() {\n      return executeBound(func, bound, context, this, args.concat(slice.call(arguments)));\n    };\n    return bound;\n  };\n\n  // Partially apply a function by creating a version that has had some of its\n  // arguments pre-filled, without changing its dynamic `this` context. _ acts\n  // as a placeholder, allowing any combination of arguments to be pre-filled.\n  _.partial = function(func) {\n    var boundArgs = slice.call(arguments, 1);\n    var bound = function() {\n      var position = 0, length = boundArgs.length;\n      var args = Array(length);\n      for (var i = 0; i < length; i++) {\n        args[i] = boundArgs[i] === _ ? arguments[position++] : boundArgs[i];\n      }\n      while (position < arguments.length) args.push(arguments[position++]);\n      return executeBound(func, bound, this, this, args);\n    };\n    return bound;\n  };\n\n  // Bind a number of an object's methods to that object. Remaining arguments\n  // are the method names to be bound. Useful for ensuring that all callbacks\n  // defined on an object belong to it.\n  _.bindAll = function(obj) {\n    var i, length = arguments.length, key;\n    if (length <= 1) throw new Error('bindAll must be passed function names');\n    for (i = 1; i < length; i++) {\n      key = arguments[i];\n      obj[key] = _.bind(obj[key], obj);\n    }\n    return obj;\n  };\n\n  // Memoize an expensive function by storing its results.\n  _.memoize = function(func, hasher) {\n    var memoize = function(key) {\n      var cache = memoize.cache;\n      var address = '' + (hasher ? hasher.apply(this, arguments) : key);\n      if (!_.has(cache, address)) cache[address] = func.apply(this, arguments);\n      return cache[address];\n    };\n    memoize.cache = {};\n    return memoize;\n  };\n\n  // Delays a function for the given number of milliseconds, and then calls\n  // it with the arguments supplied.\n  _.delay = function(func, wait) {\n    var args = slice.call(arguments, 2);\n    return setTimeout(function(){\n      return func.apply(null, args);\n    }, wait);\n  };\n\n  // Defers a function, scheduling it to run after the current call stack has\n  // cleared.\n  _.defer = _.partial(_.delay, _, 1);\n\n  // Returns a function, that, when invoked, will only be triggered at most once\n  // during a given window of time. Normally, the throttled function will run\n  // as much as it can, without ever going more than once per `wait` duration;\n  // but if you'd like to disable the execution on the leading edge, pass\n  // `{leading: false}`. To disable execution on the trailing edge, ditto.\n  _.throttle = function(func, wait, options) {\n    var context, args, result;\n    var timeout = null;\n    var previous = 0;\n    if (!options) options = {};\n    var later = function() {\n      previous = options.leading === false ? 0 : _.now();\n      timeout = null;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    };\n    return function() {\n      var now = _.now();\n      if (!previous && options.leading === false) previous = now;\n      var remaining = wait - (now - previous);\n      context = this;\n      args = arguments;\n      if (remaining <= 0 || remaining > wait) {\n        if (timeout) {\n          clearTimeout(timeout);\n          timeout = null;\n        }\n        previous = now;\n        result = func.apply(context, args);\n        if (!timeout) context = args = null;\n      } else if (!timeout && options.trailing !== false) {\n        timeout = setTimeout(later, remaining);\n      }\n      return result;\n    };\n  };\n\n  // Returns a function, that, as long as it continues to be invoked, will not\n  // be triggered. The function will be called after it stops being called for\n  // N milliseconds. If `immediate` is passed, trigger the function on the\n  // leading edge, instead of the trailing.\n  _.debounce = function(func, wait, immediate) {\n    var timeout, args, context, timestamp, result;\n\n    var later = function() {\n      var last = _.now() - timestamp;\n\n      if (last < wait && last >= 0) {\n        timeout = setTimeout(later, wait - last);\n      } else {\n        timeout = null;\n        if (!immediate) {\n          result = func.apply(context, args);\n          if (!timeout) context = args = null;\n        }\n      }\n    };\n\n    return function() {\n      context = this;\n      args = arguments;\n      timestamp = _.now();\n      var callNow = immediate && !timeout;\n      if (!timeout) timeout = setTimeout(later, wait);\n      if (callNow) {\n        result = func.apply(context, args);\n        context = args = null;\n      }\n\n      return result;\n    };\n  };\n\n  // Returns the first function passed as an argument to the second,\n  // allowing you to adjust arguments, run code before and after, and\n  // conditionally execute the original function.\n  _.wrap = function(func, wrapper) {\n    return _.partial(wrapper, func);\n  };\n\n  // Returns a negated version of the passed-in predicate.\n  _.negate = function(predicate) {\n    return function() {\n      return !predicate.apply(this, arguments);\n    };\n  };\n\n  // Returns a function that is the composition of a list of functions, each\n  // consuming the return value of the function that follows.\n  _.compose = function() {\n    var args = arguments;\n    var start = args.length - 1;\n    return function() {\n      var i = start;\n      var result = args[start].apply(this, arguments);\n      while (i--) result = args[i].call(this, result);\n      return result;\n    };\n  };\n\n  // Returns a function that will only be executed on and after the Nth call.\n  _.after = function(times, func) {\n    return function() {\n      if (--times < 1) {\n        return func.apply(this, arguments);\n      }\n    };\n  };\n\n  // Returns a function that will only be executed up to (but not including) the Nth call.\n  _.before = function(times, func) {\n    var memo;\n    return function() {\n      if (--times > 0) {\n        memo = func.apply(this, arguments);\n      }\n      if (times <= 1) func = null;\n      return memo;\n    };\n  };\n\n  // Returns a function that will be executed at most one time, no matter how\n  // often you call it. Useful for lazy initialization.\n  _.once = _.partial(_.before, 2);\n\n  // Object Functions\n  // ----------------\n\n  // Keys in IE < 9 that won't be iterated by `for key in ...` and thus missed.\n  var hasEnumBug = !{toString: null}.propertyIsEnumerable('toString');\n  var nonEnumerableProps = ['valueOf', 'isPrototypeOf', 'toString',\n                      'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString'];\n\n  function collectNonEnumProps(obj, keys) {\n    var nonEnumIdx = nonEnumerableProps.length;\n    var constructor = obj.constructor;\n    var proto = (_.isFunction(constructor) && constructor.prototype) || ObjProto;\n\n    // Constructor is a special case.\n    var prop = 'constructor';\n    if (_.has(obj, prop) && !_.contains(keys, prop)) keys.push(prop);\n\n    while (nonEnumIdx--) {\n      prop = nonEnumerableProps[nonEnumIdx];\n      if (prop in obj && obj[prop] !== proto[prop] && !_.contains(keys, prop)) {\n        keys.push(prop);\n      }\n    }\n  }\n\n  // Retrieve the names of an object's own properties.\n  // Delegates to **ECMAScript 5**'s native `Object.keys`\n  _.keys = function(obj) {\n    if (!_.isObject(obj)) return [];\n    if (nativeKeys) return nativeKeys(obj);\n    var keys = [];\n    for (var key in obj) if (_.has(obj, key)) keys.push(key);\n    // Ahem, IE < 9.\n    if (hasEnumBug) collectNonEnumProps(obj, keys);\n    return keys;\n  };\n\n  // Retrieve all the property names of an object.\n  _.allKeys = function(obj) {\n    if (!_.isObject(obj)) return [];\n    var keys = [];\n    for (var key in obj) keys.push(key);\n    // Ahem, IE < 9.\n    if (hasEnumBug) collectNonEnumProps(obj, keys);\n    return keys;\n  };\n\n  // Retrieve the values of an object's properties.\n  _.values = function(obj) {\n    var keys = _.keys(obj);\n    var length = keys.length;\n    var values = Array(length);\n    for (var i = 0; i < length; i++) {\n      values[i] = obj[keys[i]];\n    }\n    return values;\n  };\n\n  // Returns the results of applying the iteratee to each element of the object\n  // In contrast to _.map it returns an object\n  _.mapObject = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    var keys =  _.keys(obj),\n          length = keys.length,\n          results = {},\n          currentKey;\n      for (var index = 0; index < length; index++) {\n        currentKey = keys[index];\n        results[currentKey] = iteratee(obj[currentKey], currentKey, obj);\n      }\n      return results;\n  };\n\n  // Convert an object into a list of `[key, value]` pairs.\n  _.pairs = function(obj) {\n    var keys = _.keys(obj);\n    var length = keys.length;\n    var pairs = Array(length);\n    for (var i = 0; i < length; i++) {\n      pairs[i] = [keys[i], obj[keys[i]]];\n    }\n    return pairs;\n  };\n\n  // Invert the keys and values of an object. The values must be serializable.\n  _.invert = function(obj) {\n    var result = {};\n    var keys = _.keys(obj);\n    for (var i = 0, length = keys.length; i < length; i++) {\n      result[obj[keys[i]]] = keys[i];\n    }\n    return result;\n  };\n\n  // Return a sorted list of the function names available on the object.\n  // Aliased as `methods`\n  _.functions = _.methods = function(obj) {\n    var names = [];\n    for (var key in obj) {\n      if (_.isFunction(obj[key])) names.push(key);\n    }\n    return names.sort();\n  };\n\n  // Extend a given object with all the properties in passed-in object(s).\n  _.extend = createAssigner(_.allKeys);\n\n  // Assigns a given object with all the own properties in the passed-in object(s)\n  // (https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object/assign)\n  _.extendOwn = _.assign = createAssigner(_.keys);\n\n  // Returns the first key on an object that passes a predicate test\n  _.findKey = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = _.keys(obj), key;\n    for (var i = 0, length = keys.length; i < length; i++) {\n      key = keys[i];\n      if (predicate(obj[key], key, obj)) return key;\n    }\n  };\n\n  // Return a copy of the object only containing the whitelisted properties.\n  _.pick = function(object, oiteratee, context) {\n    var result = {}, obj = object, iteratee, keys;\n    if (obj == null) return result;\n    if (_.isFunction(oiteratee)) {\n      keys = _.allKeys(obj);\n      iteratee = optimizeCb(oiteratee, context);\n    } else {\n      keys = flatten(arguments, false, false, 1);\n      iteratee = function(value, key, obj) { return key in obj; };\n      obj = Object(obj);\n    }\n    for (var i = 0, length = keys.length; i < length; i++) {\n      var key = keys[i];\n      var value = obj[key];\n      if (iteratee(value, key, obj)) result[key] = value;\n    }\n    return result;\n  };\n\n   // Return a copy of the object without the blacklisted properties.\n  _.omit = function(obj, iteratee, context) {\n    if (_.isFunction(iteratee)) {\n      iteratee = _.negate(iteratee);\n    } else {\n      var keys = _.map(flatten(arguments, false, false, 1), String);\n      iteratee = function(value, key) {\n        return !_.contains(keys, key);\n      };\n    }\n    return _.pick(obj, iteratee, context);\n  };\n\n  // Fill in a given object with default properties.\n  _.defaults = createAssigner(_.allKeys, true);\n\n  // Create a (shallow-cloned) duplicate of an object.\n  _.clone = function(obj) {\n    if (!_.isObject(obj)) return obj;\n    return _.isArray(obj) ? obj.slice() : _.extend({}, obj);\n  };\n\n  // Invokes interceptor with the obj, and then returns obj.\n  // The primary purpose of this method is to \"tap into\" a method chain, in\n  // order to perform operations on intermediate results within the chain.\n  _.tap = function(obj, interceptor) {\n    interceptor(obj);\n    return obj;\n  };\n\n  // Returns whether an object has a given set of `key:value` pairs.\n  _.isMatch = function(object, attrs) {\n    var keys = _.keys(attrs), length = keys.length;\n    if (object == null) return !length;\n    var obj = Object(object);\n    for (var i = 0; i < length; i++) {\n      var key = keys[i];\n      if (attrs[key] !== obj[key] || !(key in obj)) return false;\n    }\n    return true;\n  };\n\n\n  // Internal recursive comparison function for `isEqual`.\n  var eq = function(a, b, aStack, bStack) {\n    // Identical objects are equal. `0 === -0`, but they aren't identical.\n    // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\n    if (a === b) return a !== 0 || 1 / a === 1 / b;\n    // A strict comparison is necessary because `null == undefined`.\n    if (a == null || b == null) return a === b;\n    // Unwrap any wrapped objects.\n    if (a instanceof _) a = a._wrapped;\n    if (b instanceof _) b = b._wrapped;\n    // Compare `[[Class]]` names.\n    var className = toString.call(a);\n    if (className !== toString.call(b)) return false;\n    switch (className) {\n      // Strings, numbers, regular expressions, dates, and booleans are compared by value.\n      case '[object RegExp]':\n      // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\n      case '[object String]':\n        // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\n        // equivalent to `new String(\"5\")`.\n        return '' + a === '' + b;\n      case '[object Number]':\n        // `NaN`s are equivalent, but non-reflexive.\n        // Object(NaN) is equivalent to NaN\n        if (+a !== +a) return +b !== +b;\n        // An `egal` comparison is performed for other numeric values.\n        return +a === 0 ? 1 / +a === 1 / b : +a === +b;\n      case '[object Date]':\n      case '[object Boolean]':\n        // Coerce dates and booleans to numeric primitive values. Dates are compared by their\n        // millisecond representations. Note that invalid dates with millisecond representations\n        // of `NaN` are not equivalent.\n        return +a === +b;\n    }\n\n    var areArrays = className === '[object Array]';\n    if (!areArrays) {\n      if (typeof a != 'object' || typeof b != 'object') return false;\n\n      // Objects with different constructors are not equivalent, but `Object`s or `Array`s\n      // from different frames are.\n      var aCtor = a.constructor, bCtor = b.constructor;\n      if (aCtor !== bCtor && !(_.isFunction(aCtor) && aCtor instanceof aCtor &&\n                               _.isFunction(bCtor) && bCtor instanceof bCtor)\n                          && ('constructor' in a && 'constructor' in b)) {\n        return false;\n      }\n    }\n    // Assume equality for cyclic structures. The algorithm for detecting cyclic\n    // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\n    \n    // Initializing stack of traversed objects.\n    // It's done here since we only need them for objects and arrays comparison.\n    aStack = aStack || [];\n    bStack = bStack || [];\n    var length = aStack.length;\n    while (length--) {\n      // Linear search. Performance is inversely proportional to the number of\n      // unique nested structures.\n      if (aStack[length] === a) return bStack[length] === b;\n    }\n\n    // Add the first object to the stack of traversed objects.\n    aStack.push(a);\n    bStack.push(b);\n\n    // Recursively compare objects and arrays.\n    if (areArrays) {\n      // Compare array lengths to determine if a deep comparison is necessary.\n      length = a.length;\n      if (length !== b.length) return false;\n      // Deep compare the contents, ignoring non-numeric properties.\n      while (length--) {\n        if (!eq(a[length], b[length], aStack, bStack)) return false;\n      }\n    } else {\n      // Deep compare objects.\n      var keys = _.keys(a), key;\n      length = keys.length;\n      // Ensure that both objects contain the same number of properties before comparing deep equality.\n      if (_.keys(b).length !== length) return false;\n      while (length--) {\n        // Deep compare each member\n        key = keys[length];\n        if (!(_.has(b, key) && eq(a[key], b[key], aStack, bStack))) return false;\n      }\n    }\n    // Remove the first object from the stack of traversed objects.\n    aStack.pop();\n    bStack.pop();\n    return true;\n  };\n\n  // Perform a deep comparison to check if two objects are equal.\n  _.isEqual = function(a, b) {\n    return eq(a, b);\n  };\n\n  // Is a given array, string, or object empty?\n  // An \"empty\" object has no enumerable own-properties.\n  _.isEmpty = function(obj) {\n    if (obj == null) return true;\n    if (isArrayLike(obj) && (_.isArray(obj) || _.isString(obj) || _.isArguments(obj))) return obj.length === 0;\n    return _.keys(obj).length === 0;\n  };\n\n  // Is a given value a DOM element?\n  _.isElement = function(obj) {\n    return !!(obj && obj.nodeType === 1);\n  };\n\n  // Is a given value an array?\n  // Delegates to ECMA5's native Array.isArray\n  _.isArray = nativeIsArray || function(obj) {\n    return toString.call(obj) === '[object Array]';\n  };\n\n  // Is a given variable an object?\n  _.isObject = function(obj) {\n    var type = typeof obj;\n    return type === 'function' || type === 'object' && !!obj;\n  };\n\n  // Add some isType methods: isArguments, isFunction, isString, isNumber, isDate, isRegExp, isError.\n  _.each(['Arguments', 'Function', 'String', 'Number', 'Date', 'RegExp', 'Error'], function(name) {\n    _['is' + name] = function(obj) {\n      return toString.call(obj) === '[object ' + name + ']';\n    };\n  });\n\n  // Define a fallback version of the method in browsers (ahem, IE < 9), where\n  // there isn't any inspectable \"Arguments\" type.\n  if (!_.isArguments(arguments)) {\n    _.isArguments = function(obj) {\n      return _.has(obj, 'callee');\n    };\n  }\n\n  // Optimize `isFunction` if appropriate. Work around some typeof bugs in old v8,\n  // IE 11 (#1621), and in Safari 8 (#1929).\n  if (typeof /./ != 'function' && typeof Int8Array != 'object') {\n    _.isFunction = function(obj) {\n      return typeof obj == 'function' || false;\n    };\n  }\n\n  // Is a given object a finite number?\n  _.isFinite = function(obj) {\n    return isFinite(obj) && !isNaN(parseFloat(obj));\n  };\n\n  // Is the given value `NaN`? (NaN is the only number which does not equal itself).\n  _.isNaN = function(obj) {\n    return _.isNumber(obj) && obj !== +obj;\n  };\n\n  // Is a given value a boolean?\n  _.isBoolean = function(obj) {\n    return obj === true || obj === false || toString.call(obj) === '[object Boolean]';\n  };\n\n  // Is a given value equal to null?\n  _.isNull = function(obj) {\n    return obj === null;\n  };\n\n  // Is a given variable undefined?\n  _.isUndefined = function(obj) {\n    return obj === void 0;\n  };\n\n  // Shortcut function for checking if an object has a given property directly\n  // on itself (in other words, not on a prototype).\n  _.has = function(obj, key) {\n    return obj != null && hasOwnProperty.call(obj, key);\n  };\n\n  // Utility Functions\n  // -----------------\n\n  // Run Underscore.js in *noConflict* mode, returning the `_` variable to its\n  // previous owner. Returns a reference to the Underscore object.\n  _.noConflict = function() {\n    root._ = previousUnderscore;\n    return this;\n  };\n\n  // Keep the identity function around for default iteratees.\n  _.identity = function(value) {\n    return value;\n  };\n\n  // Predicate-generating functions. Often useful outside of Underscore.\n  _.constant = function(value) {\n    return function() {\n      return value;\n    };\n  };\n\n  _.noop = function(){};\n\n  _.property = function(key) {\n    return function(obj) {\n      return obj == null ? void 0 : obj[key];\n    };\n  };\n\n  // Generates a function for a given object that returns a given property.\n  _.propertyOf = function(obj) {\n    return obj == null ? function(){} : function(key) {\n      return obj[key];\n    };\n  };\n\n  // Returns a predicate for checking whether an object has a given set of \n  // `key:value` pairs.\n  _.matcher = _.matches = function(attrs) {\n    attrs = _.extendOwn({}, attrs);\n    return function(obj) {\n      return _.isMatch(obj, attrs);\n    };\n  };\n\n  // Run a function **n** times.\n  _.times = function(n, iteratee, context) {\n    var accum = Array(Math.max(0, n));\n    iteratee = optimizeCb(iteratee, context, 1);\n    for (var i = 0; i < n; i++) accum[i] = iteratee(i);\n    return accum;\n  };\n\n  // Return a random integer between min and max (inclusive).\n  _.random = function(min, max) {\n    if (max == null) {\n      max = min;\n      min = 0;\n    }\n    return min + Math.floor(Math.random() * (max - min + 1));\n  };\n\n  // A (possibly faster) way to get the current timestamp as an integer.\n  _.now = Date.now || function() {\n    return new Date().getTime();\n  };\n\n   // List of HTML entities for escaping.\n  var escapeMap = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#x27;',\n    '`': '&#x60;'\n  };\n  var unescapeMap = _.invert(escapeMap);\n\n  // Functions for escaping and unescaping strings to/from HTML interpolation.\n  var createEscaper = function(map) {\n    var escaper = function(match) {\n      return map[match];\n    };\n    // Regexes for identifying a key that needs to be escaped\n    var source = '(?:' + _.keys(map).join('|') + ')';\n    var testRegexp = RegExp(source);\n    var replaceRegexp = RegExp(source, 'g');\n    return function(string) {\n      string = string == null ? '' : '' + string;\n      return testRegexp.test(string) ? string.replace(replaceRegexp, escaper) : string;\n    };\n  };\n  _.escape = createEscaper(escapeMap);\n  _.unescape = createEscaper(unescapeMap);\n\n  // If the value of the named `property` is a function then invoke it with the\n  // `object` as context; otherwise, return it.\n  _.result = function(object, property, fallback) {\n    var value = object == null ? void 0 : object[property];\n    if (value === void 0) {\n      value = fallback;\n    }\n    return _.isFunction(value) ? value.call(object) : value;\n  };\n\n  // Generate a unique integer id (unique within the entire client session).\n  // Useful for temporary DOM ids.\n  var idCounter = 0;\n  _.uniqueId = function(prefix) {\n    var id = ++idCounter + '';\n    return prefix ? prefix + id : id;\n  };\n\n  // By default, Underscore uses ERB-style template delimiters, change the\n  // following template settings to use alternative delimiters.\n  _.templateSettings = {\n    evaluate    : /<%([\\s\\S]+?)%>/g,\n    interpolate : /<%=([\\s\\S]+?)%>/g,\n    escape      : /<%-([\\s\\S]+?)%>/g\n  };\n\n  // When customizing `templateSettings`, if you don't want to define an\n  // interpolation, evaluation or escaping regex, we need one that is\n  // guaranteed not to match.\n  var noMatch = /(.)^/;\n\n  // Certain characters need to be escaped so that they can be put into a\n  // string literal.\n  var escapes = {\n    \"'\":      \"'\",\n    '\\\\':     '\\\\',\n    '\\r':     'r',\n    '\\n':     'n',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  var escaper = /\\\\|'|\\r|\\n|\\u2028|\\u2029/g;\n\n  var escapeChar = function(match) {\n    return '\\\\' + escapes[match];\n  };\n\n  // JavaScript micro-templating, similar to John Resig's implementation.\n  // Underscore templating handles arbitrary delimiters, preserves whitespace,\n  // and correctly escapes quotes within interpolated code.\n  // NB: `oldSettings` only exists for backwards compatibility.\n  _.template = function(text, settings, oldSettings) {\n    if (!settings && oldSettings) settings = oldSettings;\n    settings = _.defaults({}, settings, _.templateSettings);\n\n    // Combine delimiters into one regular expression via alternation.\n    var matcher = RegExp([\n      (settings.escape || noMatch).source,\n      (settings.interpolate || noMatch).source,\n      (settings.evaluate || noMatch).source\n    ].join('|') + '|$', 'g');\n\n    // Compile the template source, escaping string literals appropriately.\n    var index = 0;\n    var source = \"__p+='\";\n    text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {\n      source += text.slice(index, offset).replace(escaper, escapeChar);\n      index = offset + match.length;\n\n      if (escape) {\n        source += \"'+\\n((__t=(\" + escape + \"))==null?'':_.escape(__t))+\\n'\";\n      } else if (interpolate) {\n        source += \"'+\\n((__t=(\" + interpolate + \"))==null?'':__t)+\\n'\";\n      } else if (evaluate) {\n        source += \"';\\n\" + evaluate + \"\\n__p+='\";\n      }\n\n      // Adobe VMs need the match returned to produce the correct offest.\n      return match;\n    });\n    source += \"';\\n\";\n\n    // If a variable is not specified, place data values in local scope.\n    if (!settings.variable) source = 'with(obj||{}){\\n' + source + '}\\n';\n\n    source = \"var __t,__p='',__j=Array.prototype.join,\" +\n      \"print=function(){__p+=__j.call(arguments,'');};\\n\" +\n      source + 'return __p;\\n';\n\n    try {\n      var render = new Function(settings.variable || 'obj', '_', source);\n    } catch (e) {\n      e.source = source;\n      throw e;\n    }\n\n    var template = function(data) {\n      return render.call(this, data, _);\n    };\n\n    // Provide the compiled source as a convenience for precompilation.\n    var argument = settings.variable || 'obj';\n    template.source = 'function(' + argument + '){\\n' + source + '}';\n\n    return template;\n  };\n\n  // Add a \"chain\" function. Start chaining a wrapped Underscore object.\n  _.chain = function(obj) {\n    var instance = _(obj);\n    instance._chain = true;\n    return instance;\n  };\n\n  // OOP\n  // ---------------\n  // If Underscore is called as a function, it returns a wrapped object that\n  // can be used OO-style. This wrapper holds altered versions of all the\n  // underscore functions. Wrapped objects may be chained.\n\n  // Helper function to continue chaining intermediate results.\n  var result = function(instance, obj) {\n    return instance._chain ? _(obj).chain() : obj;\n  };\n\n  // Add your own custom functions to the Underscore object.\n  _.mixin = function(obj) {\n    _.each(_.functions(obj), function(name) {\n      var func = _[name] = obj[name];\n      _.prototype[name] = function() {\n        var args = [this._wrapped];\n        push.apply(args, arguments);\n        return result(this, func.apply(_, args));\n      };\n    });\n  };\n\n  // Add all of the Underscore functions to the wrapper object.\n  _.mixin(_);\n\n  // Add all mutator Array functions to the wrapper.\n  _.each(['pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift'], function(name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function() {\n      var obj = this._wrapped;\n      method.apply(obj, arguments);\n      if ((name === 'shift' || name === 'splice') && obj.length === 0) delete obj[0];\n      return result(this, obj);\n    };\n  });\n\n  // Add all accessor Array functions to the wrapper.\n  _.each(['concat', 'join', 'slice'], function(name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function() {\n      return result(this, method.apply(this._wrapped, arguments));\n    };\n  });\n\n  // Extracts the result from a wrapped and chained object.\n  _.prototype.value = function() {\n    return this._wrapped;\n  };\n\n  // Provide unwrapping proxy for some methods used in engine operations\n  // such as arithmetic and JSON stringification.\n  _.prototype.valueOf = _.prototype.toJSON = _.prototype.value;\n  \n  _.prototype.toString = function() {\n    return '' + this._wrapped;\n  };\n\n  // AMD registration happens at the end for compatibility with AMD loaders\n  // that may not enforce next-turn semantics on modules. Even though general\n  // practice for AMD registration is to be anonymous, underscore registers\n  // as a named module because, like jQuery, it is a base library that is\n  // popular enough to be bundled in a third party lib, but not be part of\n  // an AMD load request. Those cases could generate an error when an\n  // anonymous define() is called outside of a loader request.\n  if (typeof define === 'function' && define.amd) {\n    define('underscore', [], function() {\n      return _;\n    });\n  }\n}.call(this));\n"],"sourceRoot":"/source/"}